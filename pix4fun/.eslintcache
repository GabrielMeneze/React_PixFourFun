[{"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"1","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"2","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js":"3","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx":"4","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"5","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx":"6","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"7","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"8","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js":"9"},{"size":1173,"mtime":1608013866271,"results":"10","hashOfConfig":"11"},{"size":7768,"mtime":1608020013046,"results":"12","hashOfConfig":"11"},{"size":847,"mtime":1607748830878,"results":"13","hashOfConfig":"11"},{"size":859,"mtime":1608015816929,"results":"14","hashOfConfig":"11"},{"size":3271,"mtime":1608002570568,"results":"15","hashOfConfig":"11"},{"size":47,"mtime":1607748830930,"results":"16","hashOfConfig":"11"},{"size":8716,"mtime":1608015867604,"results":"17","hashOfConfig":"11"},{"size":7072,"mtime":1608016052897,"results":"18","hashOfConfig":"11"},{"size":375,"mtime":1607198546245,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"klvgq9",{"filePath":"22","messages":"23","errorCount":6,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport ReactDOM from 'react-dom'\r\nimport Cropper from 'react-easy-crop'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { getOrientation } from 'get-orientation/browser'\r\nimport './index.css';\r\n\r\n\r\nconst ORIENTATION_TO_ANGLE = {\r\n  '3': 180,\r\n  '6': 90,\r\n  '8': -90,\r\n}\r\n\r\nconst UploadImagem = ({classes}) => {\r\n\r\n// Parte teste crop---------------------------------------------------------------------------------------\r\nconst [imageSrc, setImageSrc] = React.useState(null)\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n  const [rotation, setRotation] = useState(0)\r\n  const [zoom, setZoom] = useState(1)\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  const [croppedImage, setCroppedImage] = useState(null)\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n  }, [])\r\n\r\n  const showCroppedImage = useCallback(async () => {\r\n    try {\r\n      const croppedImage = await getCroppedImg(\r\n        imageSrc,\r\n        croppedAreaPixels,\r\n        rotation\r\n      )\r\n      console.log('donee', { croppedImage })\r\n      setCroppedImage(croppedImage)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [imageSrc, croppedAreaPixels, rotation])\r\n\r\n  const onClose = useCallback(() => {\r\n    setCroppedImage(null)\r\n  }, [])\r\n\r\n  const onFileChange = async e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const file = e.target.files[0]\r\n      let imageDataUrl = await readFile(file)\r\n\r\n      // apply rotation if needed\r\n      const orientation = await getOrientation(file)\r\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\r\n      if (rotation) {\r\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\r\n      }\r\n\r\n      setImageSrc(imageDataUrl)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Parte teste listar--------------------------------------------------------------------------\r\n  const [token, setToken] = useState('')\r\n  const [texto, setTexto] = useState('');\r\n  const [imagem, setImagem] = useState({});\r\n  const [state, setState] = useState('');\r\n  const [post, setPosts] = useState([]);\r\n\r\n\r\n//   useEffect(()=>{\r\n//     listarimg();\r\n//     AsyncStorage.getItem('@jwt').then(data => {\r\n//         var token = data;\r\n//         setToken(token)\r\n//     });\r\n//   }, [])\r\n\r\n\r\n\r\n//   const listarimg = () => {\r\n//     fetch(`${url}Dicas`, {\r\n//       method : 'GET',\r\n//       headers : {\r\n//         'Content-Type' : 'application/json',\r\n//         'Authorization': 'Bearer ' + token \r\n//       }\r\n//     })\r\n//     .then(response => response.json())\r\n//     .then(dados => {\r\n//       console.log(dados.data);\r\n//       setPosts(dados.data);\r\n//     })\r\n//     .catch(err => console.error(err));\r\n//   }\r\n\r\n\r\n//   let openImagePickerAsync = async () => {\r\n//     let permissionResult = await ImagePicker.requestCameraRollPermissionsAsync();\r\n    \r\n//     if (permissionResult.granted === false) {\r\n//       alert(\"Permission to access camera roll is required!\");\r\n//       return;\r\n//     }\r\n    \r\n//     let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    \r\n//     if (pickerResult.cancelled === true) {\r\n//       return;\r\n//     }\r\n// }\r\n\r\n\r\n// Parte que ja está funcionando-----------------------------------------------------------------------------------\r\nconst escolherImg = event => {\r\n  setState({\r\n    selectedFile: event.target.files[0]\r\n  })\r\n}\r\n\r\n  const uparImg = async e => {\r\n\r\n    const fd = new FormData();\r\n    fd.append('image', state.selectedFile)\r\n    fetch('http://localhost:5000/api/Foto', fd)\r\n      .then(res => {\r\n        console.log(res)\r\n      });\r\n  }\r\n\r\n  return (\r\n\r\n    // Parte do crop\r\n    \r\n\r\n    \r\n    <div className=\"ContainerMain\">\r\n      <Header />\r\n      \r\n      <div>\r\n      {imageSrc ? (\r\n        <React.Fragment>\r\n          <div className={classes.cropContainer}>\r\n            <Cropper\r\n              image={imageSrc}\r\n              crop={crop}\r\n              rotation={rotation}\r\n              zoom={zoom}\r\n              aspect={4 / 3}\r\n              onCropChange={setCrop}\r\n              onRotationChange={setRotation}\r\n              onCropComplete={onCropComplete}\r\n              onZoomChange={setZoom}\r\n            />\r\n          </div>\r\n          <div className={classes.controls}>\r\n            <div className={classes.sliderContainer}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                classes={{ root: classes.sliderLabel }}\r\n              >\r\n                Zoom\r\n              </Typography>\r\n              <Slider\r\n                value={zoom}\r\n                min={1}\r\n                max={3}\r\n                step={0.1}\r\n                aria-labelledby=\"Zoom\"\r\n                classes={{ container: classes.slider }}\r\n                onChange={(e, zoom) => setZoom(zoom)}\r\n              />\r\n            </div>\r\n            <div className={classes.sliderContainer}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                classes={{ root: classes.sliderLabel }}\r\n              >\r\n                Rotation\r\n              </Typography>\r\n              <Slider\r\n                value={rotation}\r\n                min={0}\r\n                max={360}\r\n                step={1}\r\n                aria-labelledby=\"Rotation\"\r\n                classes={{ container: classes.slider }}\r\n                onChange={(e, rotation) => setRotation(rotation)}\r\n              />\r\n            </div>\r\n            <Button\r\n              onClick={showCroppedImage}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              classes={{ root: classes.cropButton }}\r\n            >\r\n              Show Result\r\n            </Button>\r\n          </div>\r\n          <ImgDialog img={croppedImage} onClose={onClose} />\r\n        </React.Fragment>\r\n      ) : (\r\n        <input type=\"file\" onChange={onFileChange} accept=\"image/*\" />\r\n      )}\r\n    </div>\r\n\r\n\r\n\r\n      {/* Containem que contem a parte de escolha do usuario */}\r\n      <div className=\"ContainerOne\">\r\n        {/* Container que possui o texto */}\r\n        <div className=\"ContainerTextOne\">\r\n          <h2 className=\"textOne\">\r\n            Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n            <p>Selecione suas fotos favoritas, recorte<br></br>\r\n            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n             Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n          </p>\r\n          </h2>\r\n        </div>\r\n\r\n        {/* Container do botão \"Escolher Imagem\" */}\r\n        <div className=\"ContainerBtn\">\r\n          <button>\r\n            <input\r\n              type=\"file\"\r\n              className=\"BtnChoseFile\"\r\n              onChange={escolherImg}\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"linha\" />\r\n\r\n      <td className=\"ContainerTwo\">\r\n        <div className=\"ContainerArquivos\">\r\n          <div className=\"itensTable\">\r\n            <p>imagem</p>\r\n            <div className=\"BtnGrupo\">\r\n              <button>Excluir</button>\r\n              <button>Cortar</button>\r\n              <button>Frase</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n\r\n      <button\r\n        className=\"BtnChoseFile\"\r\n        onClick={uparImg}\r\n      >Enviar</button>\r\n      \r\n\r\n      <Footer id=\"rodape\"/>\r\n    </div>\r\n  )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js",[],["60","61"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx",[],["62","63"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",["64","65"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./index.css\";\r\nimport logoIN from '../../assets/img/001-instagram.svg'\r\nimport logoFB from '../../assets/img/002-facebook.svg'\r\nimport logoPT from '../../assets/img/003-pinterest.svg'\r\n\r\n\r\nexport default function Footer() {\r\n    \r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n\r\n  const enviarEmail = () => {\r\n    return nome;\r\n  };\r\n\r\n  return (\r\n    <footer id=\"rodape\">\r\n      <div className=\"container\">\r\n        <div className=\"flex\">\r\n          <div className=\"textFooter\">\r\n            <p>Pix4Fun</p>\r\n            <p>IMPRESSÃO DE FOTOS NO FORMATO POLAROID</p>\r\n            <a href=\"mailto:CONTATO@PIX4FUN.COM.BR\">CONTATO@PIX4FUN.COM.BR</a>\r\n          </div>\r\n\r\n          <form method=\"post\" className=\"contato\">\r\n            <p>Entre em contato conosco</p>\r\n            <div className=\"field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={nome}\r\n                onChange={(event) => setNome(event.target.value)}\r\n                placeholder=\"Nome\"\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <textarea\r\n                rows=\"3\"\r\n                cols=\"35\"\r\n                name=\"nome\"\r\n                value={mensagem}\r\n                onChange={(event) => setMensagem(event.target.value)}\r\n                placeholder=\"Mensagem\"\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btnEnviar\">Enviar</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"pFooter\">\r\n          <p>©PIX4FUN Todos os direitos reservados. CNPJ 18.882.937/0001-01</p>\r\n          <p>SIGA-NOS EM NOSSAS REDES SOCIAIS PARA FICAR POR DENTRO DE TODAS AS\r\n            NOVIDADES!</p>\r\n        </div>\r\n\r\n        <div className=\"links\">\r\n            <a href=\"https://instagram.com/pix4funphoto\"><img src={logoIN} alt=\"Logo com link para o Instagram do pix4fun\"/></a>\r\n            <a href=\"https://www.facebook.com/pix4funphoto\"><img src={logoFB} alt=\"Logo com link para o Facebook do pix4fun\"/></a>\r\n            <a href=\"https://www.pinterest.com/\"><img src={logoPT} alt=\"Logo com link para o Pinterest do pix4fun\"/></a>\r\n        </div>\r\n\r\n        {\r\n          // Formulário com boostrap\r\n        }\r\n\r\n        {/* <Form onSubmit={event => enviarEmail(event)}>\r\n          <Form.Group controlId=\"formBasicContato\">\r\n          <Form.Control type=\"text\" placeholder=\"Nome\" value={nome} onChange={event => setNome(event.target.value)} />\r\n          <Form.Control type=\"text\" placeholder=\"Email\" value={email} onChange={event => setEmail(event.target.value)} />\r\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Mensagem\" value={mensagem} onChange={event => setMensagem(event.target.value)} />\r\n          </Form.Group>\r\n        </Form> */}\r\n      </div>\r\n    </footer>\r\n  );\r\n}","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["66"],"import \"./index.css\";\r\nimport React, { useState } from \"react\";\r\nimport { url } from \"../../utils/constants\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport Header from \"../../components/Header/index\";\r\n\r\nexport default function LoginCadastro() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailCadastro, setEmailCadastro] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [senhaCadastro, setSenhaCadastro] = useState(\"\");\r\n  const [telefone, setTelefone] = useState(\"\");\r\n  const [cep, setCep] = useState(\"\");\r\n  const [rua, setRua] = useState(\"\");\r\n  const [numero, setNumero] = useState(\"\");\r\n  const [complemento, setComplemento] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const cadastrar = (event) => {\r\n    event.preventDefault();\r\n\r\n    const perfilUsuario =\r\n      localStorage.getItem(\"token\") === null\r\n        ? null\r\n        : jwt_decode(localStorage.getItem(\"token\"));\r\n\r\n    fetch(url + \"usuario\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        nome: nome,\r\n        email: emailCadastro,\r\n        senha: senhaCadastro,\r\n        telefone: telefone,\r\n        cep: cep,\r\n        rua: rua,\r\n        numero: numero,\r\n        complemento: complemento,\r\n        idPerfilAcesso: 1,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.ok) {\r\n        console.log(response.json());\r\n\r\n        alert(\"Usuario cadastrado.\");\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const logar = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(url + \"login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: email,\r\n        senha: senha,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // Verifica se a validação for OK e caso seja, informa a resposta\r\n        if (response.ok) return response.json();\r\n\r\n        // Caso validação não seja OK informa um alert\r\n        alert(\"Dado inválido\");\r\n      })\r\n      .then((data) => {\r\n        // Armazena o token\r\n        localStorage.setItem(\"token\", data.token);\r\n\r\n        let usuario = jwt_decode(data.token);\r\n\r\n        console.log(usuario);\r\n\r\n        // Após efetuar login encaminha para uma página\r\n        // if (usuario.Role === \"1\") {\r\n        //   history.push(\"/\");\r\n        // } else {\r\n        //   history.push(\"/\");\r\n        // }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n\r\n      <div className=\"loginCadastro\">\r\n        <section id=\"login\">\r\n          <Form onSubmit={(event) => logar(event)}>\r\n            <p>Faça o login</p>\r\n            <div className=\"field\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"senha\"\r\n                value={senha}\r\n                onChange={(event) => setSenha(event.target.value)}\r\n              />\r\n            </div>\r\n            <Button type=\"submit\"  className=\"btnEnviar\">Logar</Button>\r\n          </Form>\r\n        </section>\r\n\r\n        <hr />\r\n\r\n        <section id=\"cadastro\">\r\n          <Form onSubmit={(event) => cadastrar(event)}>\r\n            <p>Faça o cadastro</p>\r\n            <div className=\"field\">\r\n              <label>Nome</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={nome}\r\n                onChange={(event) => setNome(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Email</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={emailCadastro}\r\n                onChange={(event) => setEmailCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                required\r\n                type=\"password\"\r\n                name=\"senha\"\r\n                value={senhaCadastro}\r\n                onChange={(event) => setSenhaCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"telefone\">Telefone</label>\r\n              <input\r\n                required\r\n                type=\"tel\"\r\n                name=\"telefone\"\r\n                value={telefone}\r\n                onChange={(event) => setTelefone(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>CEP</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"cep\"\r\n                value={cep}\r\n                onChange={(event) => setCep(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Rua</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"rua\"\r\n                value={rua}\r\n                onChange={(event) => setRua(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Numero</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"numero\"\r\n                value={numero}\r\n                onChange={(event) => setNumero(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Complemento</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"complemento\"\r\n                value={complemento}\r\n                placeholder=\"Se não houver, não preencha este campo\"\r\n                onChange={(event) => setComplemento(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\"  className=\"btnEnviar\">Cadastrar</Button>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n\r\n      {/* <div className=\"ContainerGeral\">\r\n        <div className=\"form\" method=\"post\">\r\n          <fieldset className=\"FildSet\">\r\n            <div className=\"ContainerLogin\">\r\n              <h1 className=\"titulo\">Entrar</h1>\r\n              <label>\r\n                E-mail\r\n                <input className=\"inputEmail\" id=\"email\" type=\"email\" />\r\n              </label>\r\n              <label>\r\n                Senha\r\n                <input className=\"senha\" id=\"senha\" type=\"password\" />\r\n              </label>\r\n              <input\r\n                className=\"botton\"\r\n                type=\"submit\"\r\n                name=\"prosseguir\"\r\n                value=\"Prosseguir\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n        <hr className=\"linha\" />\r\n        <div className=\"form\" method=\"post\">\r\n          <fieldset className=\"FildSet\">\r\n            <div className=\"ContainerLogin\">\r\n              <h1 className=\"titulo\">Cadastre sua conta</h1>\r\n              <label>\r\n                Nome\r\n                <input className=\"name\" id=\"name\" type=\"text\" />\r\n              </label>\r\n              <label>\r\n                E-mail\r\n                <input className=\"email\" id=\"email\" type=\"email\" />\r\n              </label>\r\n              <label>\r\n                Senha\r\n                <input className=\"senha\" id=\"senha\" type=\"password\" />\r\n              </label>\r\n              <label>\r\n                Telefone\r\n                <input className=\"phone\" id=\"phone\" type=\"number\" />\r\n              </label>\r\n              <label>\r\n                CEP\r\n                <input className=\"cep\" id=\"cep\" type=\"text\" />\r\n              </label>\r\n              <label>\r\n                Complemento\r\n                <input className=\"complemento\" id=\"complemento\" type=\"text\" />\r\n              </label>\r\n              <input\r\n                className=\"botton\"\r\n                type=\"submit\"\r\n                name=\"cadastrar\"\r\n                value=\"Cadastrar\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </div> */}\r\n\r\n      <Footer id=\"rodape\" />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["67","68","69"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js",[],{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":16},{"ruleId":"70","severity":1,"message":"75","line":8,"column":10,"nodeType":"72","messageId":"73","endLine":8,"endColumn":20},{"ruleId":"76","severity":2,"message":"77","line":35,"column":34,"nodeType":"72","messageId":"78","endLine":35,"endColumn":47},{"ruleId":"76","severity":2,"message":"79","line":54,"column":32,"nodeType":"72","messageId":"78","endLine":54,"endColumn":40},{"ruleId":"76","severity":2,"message":"80","line":60,"column":30,"nodeType":"72","messageId":"78","endLine":60,"endColumn":45},{"ruleId":"70","severity":1,"message":"81","line":75,"column":10,"nodeType":"72","messageId":"73","endLine":75,"endColumn":15},{"ruleId":"70","severity":1,"message":"82","line":75,"column":17,"nodeType":"72","messageId":"73","endLine":75,"endColumn":25},{"ruleId":"70","severity":1,"message":"83","line":76,"column":10,"nodeType":"72","messageId":"73","endLine":76,"endColumn":15},{"ruleId":"70","severity":1,"message":"84","line":76,"column":17,"nodeType":"72","messageId":"73","endLine":76,"endColumn":25},{"ruleId":"70","severity":1,"message":"85","line":77,"column":10,"nodeType":"72","messageId":"73","endLine":77,"endColumn":16},{"ruleId":"70","severity":1,"message":"86","line":77,"column":18,"nodeType":"72","messageId":"73","endLine":77,"endColumn":27},{"ruleId":"70","severity":1,"message":"87","line":79,"column":10,"nodeType":"72","messageId":"73","endLine":79,"endColumn":14},{"ruleId":"70","severity":1,"message":"88","line":79,"column":16,"nodeType":"72","messageId":"73","endLine":79,"endColumn":24},{"ruleId":"89","severity":2,"message":"90","line":175,"column":16,"nodeType":"91","endLine":175,"endColumn":22},{"ruleId":"89","severity":2,"message":"90","line":192,"column":16,"nodeType":"91","endLine":192,"endColumn":22},{"ruleId":"89","severity":2,"message":"92","line":211,"column":12,"nodeType":"91","endLine":211,"endColumn":21},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"70","severity":1,"message":"99","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":14},{"ruleId":"70","severity":1,"message":"100","line":15,"column":9,"nodeType":"72","messageId":"73","endLine":15,"endColumn":20},{"ruleId":"70","severity":1,"message":"101","line":27,"column":11,"nodeType":"72","messageId":"73","endLine":27,"endColumn":24},{"ruleId":"70","severity":1,"message":"102","line":4,"column":27,"nodeType":"72","messageId":"73","endLine":4,"endColumn":33},{"ruleId":"70","severity":1,"message":"103","line":4,"column":40,"nodeType":"72","messageId":"73","endLine":4,"endColumn":46},{"ruleId":"70","severity":1,"message":"104","line":4,"column":48,"nodeType":"72","messageId":"73","endLine":4,"endColumn":53},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'withStyles' is defined but never used.","no-undef","'getCroppedImg' is not defined.","undef","'readFile' is not defined.","'getRotatedImage' is not defined.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'texto' is assigned a value but never used.","'setTexto' is assigned a value but never used.","'imagem' is assigned a value but never used.","'setImagem' is assigned a value but never used.","'post' is assigned a value but never used.","'setPosts' is assigned a value but never used.","react/jsx-no-undef","'Slider' is not defined.","JSXIdentifier","'ImgDialog' is not defined.","no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"'Form' is defined but never used.","'enviarEmail' is assigned a value but never used.","'perfilUsuario' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]