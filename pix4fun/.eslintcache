[{"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"1","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx":"2","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\index.js":"3","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"4","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"5","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"6"},{"size":11856,"mtime":1612826708001,"results":"7","hashOfConfig":"8"},{"size":5863,"mtime":1612828980160,"results":"9","hashOfConfig":"8"},{"size":944,"mtime":1612634058719,"results":"10","hashOfConfig":"8"},{"size":2939,"mtime":1612634058727,"results":"11","hashOfConfig":"8"},{"size":6971,"mtime":1612548865146,"results":"12","hashOfConfig":"8"},{"size":10792,"mtime":1612826708000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"11ran25",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45"],"// Fechar o crop como você fecha o input da frase\r\n\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport './index.css';\r\nimport { event, get } from 'jquery';\r\n\r\nconst UploadImagem = () => {\r\n    const [imagens, setImagens] = useState([])\r\n    const [limitador, setLimitador] = useState(0)\r\n    const [des, setDes] = useState(-1)\r\n    const [li, setLi] = useState('oi')\r\n    const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = React.useState(1)\r\n    const [container2, setContainer2] = React.useState(null)\r\n    const [croppedarea, setCroppedarea] = React.useState(null)\r\n    const [qtdImgs, setQntdItens] = React.useState(localStorage.getItem(\"produtoinCart\"))\r\n\r\n    const keys = qtdImgs.split(' ')\r\n\r\n    // Variaveis referentes aos botões\r\n    const [frase, setFrase] = useState('')\r\n    const [image, setImage] = React.useState(null)\r\n\r\n    //variaveis do modal\r\n    const [modalShow, setModalShow] = React.useState(false)\r\n    const [modalcrop, setModalcrop] = React.useState(false)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const refCortar = () => inputCortar.current.click();\r\n\r\n    //Componente que define a area do crop\r\n    const onCropComplete = (cropPorcentagem, cropPixels) => {\r\n        setCroppedarea(cropPixels)\r\n        console.log(cropPorcentagem, croppedarea)\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparFrase = () => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:3000/api/Foto/FraseFoto', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // componente que escolhe a imagem\r\n    const escolherImg = event => {\r\n\r\n        var pack6 = 5;\r\n        var pack12 = 11;\r\n        var pack18 = 17;\r\n\r\n        // Verificação para limitar quantidade de fotos escolhidas\r\n        if (limitador == 0 && li == 'oi') {\r\n            // seleciona a foto\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n            console.log(imagens)\r\n            if (keys[6] == 6) {\r\n                setLimitador(limitador + pack6)\r\n            }\r\n            else if (keys[6] == 12) {\r\n                setLimitador(limitador + pack12);\r\n            }\r\n            else if (keys[6] == 18) {\r\n                setLimitador(limitador + pack18);\r\n            }\r\n        } else if (li == 'oi') {\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n\r\n            setLimitador(limitador + des)\r\n\r\n            if (limitador == 1) {\r\n                alert('Pronto! agora basta enviar as fotos')\r\n                setLi('hoje');\r\n            }\r\n        } else if (li == 'hoje') {\r\n            alert('voce não pode mais selecionar imagens')\r\n        }\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = (event) => {\r\n        if (limitador > 0) {\r\n            alert('você ainda pode selecionar mais fotos')\r\n        } else {\r\n            const fd = new FormData();\r\n            fd.append('image', imagens)\r\n            fetch('http://localhost:5000/api/Foto', fd)\r\n                .then(res => {\r\n                    console.log(res)\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    function excluirImg(target, index) {\r\n        var i = 1\r\n        const list = Array.from(imagens)\r\n        list.splice(index, 1);\r\n\r\n        setImagens(list);\r\n        setLi('oi')\r\n        setLimitador(limitador + i);\r\n    }\r\n\r\n\r\n    // Componente que escolhe a imagem e o corta \r\n    // const AbrirCrop = (event, props) => {\r\n\r\n    //     const reader = new FileReader();\r\n\r\n    //     if (event.target.files[0]) {\r\n    //         reader.readAsDataURL(event.target.files[0])\r\n    //         reader.addEventListener(\"load\", () => {\r\n    //             setImage(reader.result)\r\n    //         })\r\n    //     }\r\n    // };\r\n\r\n        \r\n    function ModalCrop(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Recorte a imagem\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        <div className=\"container-cropper\" >\r\n                        <div className='cropper'>\r\n                            <Cropper\r\n                                image={image}\r\n                                // imagens={imagens}\r\n                                crop={crop}\r\n                                zoom={zoom}\r\n                                aspect={1}\r\n                                onCropChange={setCrop}\r\n                                onZoomChange={setZoom}\r\n                                onCropComplete={onCropComplete}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='slider'>\r\n                            <Slider\r\n                                min={1}\r\n                                max={6}\r\n                                step={0.1}\r\n                                value={zoom}\r\n                                onChange={(e, zoom) => setZoom(zoom)}\r\n                                color='secondary'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    // Define frase que acompanhará foto\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\" onClick={uparFrase}>Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerA_Text\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerB_escolher\">\r\n                    <input\r\n                        href=\"#ContainerT\"\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={escolherImg}\r\n                        onClick={() => setContainer2(true)}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <button\r\n                        className=\"Btn\"\r\n                        onClick={refbtnEscolher}\r\n                    >Escolher imagem</button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"lin\" id=\"ContainerT\" />\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n\r\n            <div className=\"ContainerTwo\">\r\n\r\n                <div className=\"container_bloco\">\r\n                    {imagens.map(item => {\r\n                        return (\r\n                            <div className=\"bloco\">\r\n                                <div className=\"imagem\">\r\n                                    {/* lista a imagem no bloco */}\r\n                                    <img src={item} />\r\n                                </div>\r\n                                <div className=\"container-buttons\">\r\n                                    {/* botão excluir */}\r\n                                    <Button onClick={() => excluirImg(item.id)} >Excluir</Button>\r\n\r\n                                    {/* Abre o cortar imagem */}\r\n                                    <Button\r\n                                        onClick={() => setModalcrop(true)}\r\n                                    >Cortar</Button>\r\n                                    <ModalCrop\r\n                                        show={modalcrop}\r\n                                        onHide={() => setModalcrop(false)}\r\n                                    />\r\n                                    {/* Abre o input para a frase da foto */}\r\n                                    <Button\r\n                                        onClick={() => setModalShow(true)}>\r\n                                        Frase\r\n                                    </Button>\r\n                                    <ModalFrase\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"man\">\r\n                    <div className=\"container-subimit\">\r\n                        {<p>Você ainda pode escolher {limitador} imagens</p>}\r\n                        <div className=\"escolherdnv\">\r\n                            <button\r\n                                className=\"Btn\"\r\n                                onClick={refbtnEscolher}\r\n                            >ESCOLHER OUTRA IMAGEM</button>\r\n                            <button\r\n                                className=\"Btn\"\r\n                                onClick={uparImg}\r\n                            >SALVAR E ENVIAR</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <input\r\n                    ref={inputCortar}\r\n                    style={{ display: 'none' }}\r\n                />\r\n                <Button\r\n                    onClick={refCortar}>cortar</Button>\r\n            </div>\r\n\r\n            <div id=\"contact\" />\r\n            <div id=\"doubt\" />\r\n            <Footer />\r\n        </div >\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n",["46","47"],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx",["48","49","50"],"import React, { useState } from 'react';\r\nimport Header from '../../components/Header'\r\nimport './index.css';\r\nimport Footer from '../../components/Footer';\r\n\r\n\r\nconst Carrinho = () => {\r\n    // SDK de Mercado Pago\r\n    const mercadopago = require('mercadopago');\r\n\r\n    // Configura credenciais\r\n    mercadopago.configure({\r\n        access_token: 'TEST-1605680289481240-012320-53dbb9ecc09e7e7ef91c0ebf42e213cc-540136132'\r\n    });\r\n\r\n    // Cria um objeto de preferência\r\n    let preference = {\r\n        items: [\r\n            {\r\n                title: 'Meu produto',\r\n                unit_price: 100,\r\n                quantity: 1,\r\n            }\r\n        ]\r\n    };\r\n\r\n    mercadopago.preferences.create(preference)\r\n        .then(function (response) {\r\n            // Este valor substituirá a string \"<%= global.id %>\" no seu HTML\r\n            global.id = response.body.id;\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    const [listarImgs, setListarImgs] = React.useState(localStorage.getItem(\"produtoinCart\"));\r\n    const [custoTotal, setCustoTotal] = React.useState(localStorage.getItem(\"custoTotal\"))\r\n    const [cartNumber, setCartNumber] = React.useState(localStorage.getItem(\"cartNumber\"))\r\n\r\n    function Validar(event) {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const data = Object.fromEntries(formData);\r\n\r\n        if (data.Cupom) {\r\n            if (data.Cupom === 'PIX10') {\r\n                let desconto = (custoTotal * 0.9);\r\n                setCustoTotal(desconto);\r\n                console.log('novo valor com 10% de desconto: ', desconto)\r\n            } else {\r\n                console.log('cupom não é valido')\r\n            }\r\n        } else {\r\n            console.log('é necessario preencher o campo')\r\n        }\r\n    }\r\n\r\n    var separadores = ['\"', ':', ',', '}']\r\n    const keys = listarImgs.split(new RegExp('(' + separadores.join('|') + ')'))\r\n    console.log(keys)\r\n\r\n    const custoFrete = () => {\r\n        var frete = 10.00\r\n        setCustoTotal(custoTotal + frete)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"mai\">\r\n            <Header />\r\n            <div className=\"produto-detalhes\">\r\n                <div className=\"con\">\r\n                    <div className=\"produto-h\">\r\n                        <h5 className=\"titulo\">produto</h5>\r\n                        <h5 className=\"preco\">preço</h5>\r\n                        <h5 className=\"quantidade\">quantidade</h5>\r\n                        <h5 className=\"total\">total</h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"con\">\r\n                    <div className=\"produto-carrinho\">\r\n                        {<p className=\"nome\" >{keys[14]}</p>}\r\n                        {<p className=\"preco-b\">{keys[24]}</p>}\r\n                        {<p className=\"quantidade-b\">{cartNumber}</p>}\r\n                        {<p className=\"custo\">{keys[24]}</p>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"container-resumo\">\r\n                <div className=\"resumo-pedido\">\r\n                    <div className=\"limit-div\">\r\n                        <h5>Resumo pedido</h5>\r\n                        <div className=\"resumo-detalhes\">\r\n                            {<p>{cartNumber} produto(s)</p>}\r\n                            {<p>R${keys[24]}</p>}\r\n                        </div>\r\n                        <div className=\"resumo-detalhes\">\r\n                            {<p>frete</p>}\r\n                            {<p>{keys[48]}</p>}\r\n                        </div>\r\n                        <div className=\"resumo-detalhes\">\r\n                            <form className=\"form-cupom\" onSubmit={Validar}>\r\n                                <div className=\"form-cupom\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"Cupom\"\r\n                                        className=\"input-cupom\"\r\n                                    >\r\n                                    </input>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        value=\"vcupom\"\r\n                                        onClick={custoFrete}\r\n                                    >OK</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <hr />\r\n\r\n                        <div className=\"resumo-detalhes\">\r\n                            <strong>total</strong>\r\n                            <strong>{custoTotal}</strong>\r\n                        </div>\r\n                        <div className=\"buy-area\">\r\n                            <button className=\"buy-button\">\r\n                                COMPRAR\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* <form onSubmit={pagamentoHandler}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"pago\"\r\n                            className=\"form-control\"\r\n                        >\r\n                        </input>\r\n                        <button\r\n                            type=\"submit\"\r\n                            value=\"Pago\"\r\n                        >mercado</button>\r\n                    </div>\r\n                </form> */}\r\n            <script\r\n                src=\"https://www.mercadopago.com.ar/integrations/v1/web-payment-checkout.js\"\r\n                data-preference-id='<%= global.id %>'>\r\n            </script>\r\n            <Footer />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Carrinho;\r\n","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\index.js",[],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",[],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["51"],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["52","53"],{"ruleId":"54","severity":1,"message":"55","line":10,"column":27,"nodeType":"56","messageId":"57","endLine":10,"endColumn":33},{"ruleId":"54","severity":1,"message":"58","line":10,"column":35,"nodeType":"56","messageId":"57","endLine":10,"endColumn":39},{"ruleId":"54","severity":1,"message":"59","line":12,"column":10,"nodeType":"56","messageId":"57","endLine":12,"endColumn":15},{"ruleId":"54","severity":1,"message":"60","line":12,"column":17,"nodeType":"56","messageId":"57","endLine":12,"endColumn":20},{"ruleId":"54","severity":1,"message":"61","line":17,"column":17,"nodeType":"56","messageId":"57","endLine":17,"endColumn":23},{"ruleId":"54","severity":1,"message":"62","line":21,"column":12,"nodeType":"56","messageId":"57","endLine":21,"endColumn":22},{"ruleId":"54","severity":1,"message":"63","line":23,"column":21,"nodeType":"56","messageId":"57","endLine":23,"endColumn":33},{"ruleId":"54","severity":1,"message":"64","line":29,"column":19,"nodeType":"56","messageId":"57","endLine":29,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":67,"column":23,"nodeType":"67","messageId":"68","endLine":67,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":67,"column":34,"nodeType":"67","messageId":"68","endLine":67,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":71,"column":25,"nodeType":"67","messageId":"68","endLine":71,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":74,"column":30,"nodeType":"67","messageId":"68","endLine":74,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":77,"column":30,"nodeType":"67","messageId":"68","endLine":77,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":80,"column":23,"nodeType":"67","messageId":"68","endLine":80,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":85,"column":27,"nodeType":"67","messageId":"68","endLine":85,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":89,"column":23,"nodeType":"67","messageId":"68","endLine":89,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":255,"column":37,"nodeType":"71","endLine":255,"endColumn":55},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"54","severity":1,"message":"76","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"77","line":35,"column":24,"nodeType":"56","messageId":"57","endLine":35,"endColumn":37},{"ruleId":"54","severity":1,"message":"78","line":37,"column":24,"nodeType":"56","messageId":"57","endLine":37,"endColumn":37},{"ruleId":"54","severity":1,"message":"79","line":82,"column":13,"nodeType":"56","messageId":"57","endLine":82,"endColumn":20},{"ruleId":"54","severity":1,"message":"76","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":4,"column":27,"nodeType":"56","messageId":"57","endLine":4,"endColumn":33},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'event' is defined but never used.","'get' is defined but never used.","'setDes' is assigned a value but never used.","'container2' is assigned a value but never used.","'setQntdItens' is assigned a value but never used.","'setImage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'useState' is defined but never used.","'setListarImgs' is assigned a value but never used.","'setCartNumber' is assigned a value but never used.","'usuario' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]