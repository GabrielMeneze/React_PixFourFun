[{"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"1","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"2","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx":"3","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"4","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"5","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js":"6","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"7","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx":"8","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js":"9","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx":"10","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js":"11"},{"size":14687,"mtime":1615272899842,"results":"12","hashOfConfig":"13"},{"size":5051,"mtime":1615267101894,"results":"14","hashOfConfig":"13"},{"size":6948,"mtime":1615279092374,"results":"15","hashOfConfig":"13"},{"size":12764,"mtime":1614714452413,"results":"16","hashOfConfig":"13"},{"size":7008,"mtime":1615179015284,"results":"17","hashOfConfig":"13"},{"size":944,"mtime":1613968572220,"results":"18","hashOfConfig":"13"},{"size":2731,"mtime":1614714452328,"results":"19","hashOfConfig":"13"},{"size":4739,"mtime":1615265871556,"results":"20","hashOfConfig":"13"},{"size":697,"mtime":1613968572204,"results":"21","hashOfConfig":"13"},{"size":47,"mtime":1613968572251,"results":"22","hashOfConfig":"13"},{"size":375,"mtime":1613968572220,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"1clyjjo",{"filePath":"27","messages":"28","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"import React, { useState } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport './index.css';\r\n\r\nconst UploadImagem = () => {\r\n    const [imagens, setImagens] = useState([])\r\n    const [limitador, setLimitador] = useState(0)\r\n    const [des, setDes] = useState(-1)\r\n    const [li, setLi] = useState('oi')\r\n    const [container2, setContainer2] = React.useState(null)\r\n    const [image, setImage] = React.useState(null)\r\n    const [frase, setFrase] = useState('')\r\n    const [qtdImgs, setQntdItens] = React.useState(localStorage.getItem(\"produtoinCart\"))\r\n    const keys = qtdImgs.split(' ')\r\n    const [modalShow, setModalShow] = React.useState(false)\r\n    const [modalcrop, setModalcrop] = React.useState(false)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const refCortar = () => inputCortar.current.click();\r\n\r\n    // Upa imagem para a api\r\n    const uparFrase = () => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:5000/api/Foto/FraseFoto', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // componente que escolhe a imagem\r\n    const escolherImg = event => {\r\n\r\n        var pack6 = 5;\r\n        var pack12 = 11;\r\n        var pack18 = 17;\r\n\r\n        console.log(keys)\r\n        // Verificação para limitar quantidade de fotos escolhidas\r\n        if (limitador == 0 && li == 'oi') {\r\n\r\n            // seleciona a foto\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n            setImagens(imagens)\r\n\r\n            if (keys[2] == 6) {\r\n                setLimitador(limitador + pack6)\r\n            }\r\n            else if (keys[2] == 12) {\r\n                setLimitador(limitador + pack12);\r\n            }\r\n            else if (keys[2] == 18) {\r\n                setLimitador(limitador + pack18);\r\n            }\r\n        } else if (li == 'oi') {\r\n\r\n\r\n            // seleciona a foto\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n            setImagens(imagens)\r\n\r\n\r\n\r\n\r\n\r\n            setLimitador(limitador + des)\r\n\r\n            if (limitador == 1) {\r\n                alert('Pronto! agora basta enviar as fotos')\r\n                setLi('hoje');\r\n            }\r\n        } else if (li == 'hoje') {\r\n            alert('voce não pode mais selecionar imagens')\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = () => {\r\n        const fd = new FormData();\r\n        fd.append('imagem', imagens)\r\n        fetch('http://localhost:5000/api/Upload', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function excluirImg(index) {\r\n        var i = 1\r\n        const list = Array.from(imagens)\r\n        list.splice(index, 1);\r\n\r\n        setImagens(list);\r\n        setLi('oi')\r\n        setLimitador(limitador + i);\r\n    }\r\n\r\n\r\n\r\n    function ModalCrop(props) {\r\n\r\n        // Variaveis que constituem o crop\r\n        const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n        const [zoom, setZoom] = React.useState(1)\r\n        const [aspect, setAspect] = React.useState(1)\r\n        const [image, setImage] = React.useState(null)\r\n        const [inputImg, setInputImg] = useState('')\r\n        const [blob, setBlob] = React.useState(null)\r\n        \r\n        // const createImage = (url) => {\r\n        //     new Promise((resolve, reject) => {\r\n        //         const imagee = new imagee()\r\n        //         imagee.addEventListener('load', () => resolve(imagee))\r\n        //         imagee.addEventListener('error', error => reject(error))\r\n        //         imagee.setAttribute('crossOrigin', 'anonymous')\r\n        //         imagee.src = url\r\n        //     })\r\n        // }\r\n         const getCroppedImg = async (imageSrc, crop) => {\r\n            // const image = await createImage(imageSrc)\r\n            // const canvas = document.createElement('canvas')\r\n            // const ctx = canvas.getContext('2d')\r\n            \r\n            // return new Promise((resolve) => {\r\n            //     canvas.toBlob((blob) => {\r\n            //         resolve(blob)\r\n            //     }, 'imagee/jpeg')\r\n            // })\r\n        }\r\n\r\n        //Componente que define a area do crop: x, y, width, height\r\n        const onCropComplete = async (cropPixels) => {\r\n            const imagemCortada =  await getCroppedImg(\r\n                inputImg,\r\n                cropPixels\r\n            )\r\n            getBlob(imagemCortada);\r\n        }\r\n\r\n        function getBlob(blob) {\r\n            setBlob(blob)\r\n        }\r\n\r\n        // Componente que escolhe a imagem a ser recortada\r\n        const AbrirCrop = (e) => {\r\n\r\n            const file = e.target.files[0]\r\n            const reader = new FileReader()\r\n\r\n            reader.addEventListener('load', () => {\r\n                setInputImg(reader.result)\r\n            }, false)\r\n\r\n            if (file) {\r\n                reader.readAsDataURL(file)\r\n            }\r\n        };\r\n\r\n        function uparCrop(e) {\r\n            e.preventDefault()\r\n            const fd = new FormData();\r\n            fd.append('image', blob, { contentType: blob.type })\r\n            fetch('http://localhost:5000/api/Foto', fd)\r\n                .then(res => {\r\n                    console.log(res)\r\n                });\r\n        }\r\n\r\n\r\n        // Funções referentes aos botôes Paisagem Quadrado Retrato\r\n        function Dime1() { setAspect(1) } // Quadrado\r\n        function Dime2() { setAspect(2.1) } // Paisagem\r\n        function Dime3() { setAspect(0.9) } // Retrato\r\n\r\n        // retorna o front-end do modal e o crop\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Recorte a imagem\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {inputImg ? (\r\n                        <>\r\n                            <div className=\"FraseBtn\">\r\n                                <h3>Escolha a dimensão da sua foto</h3>\r\n                            </div>\r\n                            <div className=\"btns\" >\r\n                                <Button onClick={Dime1}>Quadrado</Button>\r\n                                <Button onClick={Dime2}>Paisagem</Button>\r\n                                <Button onClick={Dime3}>Retrato</Button>\r\n                            </div>\r\n                            <div className=\"container-cropper\" >\r\n                                <div className='cropper'>\r\n                                    <Cropper\r\n                                        image={inputImg}\r\n                                        crop={crop}\r\n                                        zoom={zoom}\r\n                                        aspect={aspect}\r\n                                        onCropChange={setCrop}\r\n                                        onZoomChange={setZoom}\r\n                                        onCropComplete={onCropComplete}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='slider'>\r\n                                    <Slider\r\n                                        min={1}\r\n                                        max={6}\r\n                                        step={0.1}\r\n                                        value={zoom}\r\n                                        onChange={(e, zoom) => setZoom(zoom)}\r\n                                        color='secondary'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n                    <input\r\n                        type=\"file\"\r\n                        ref={inputCortar}\r\n                        accept='image/*'\r\n                        style={{ display: 'none' }}\r\n                        onChange={AbrirCrop}\r\n                    />\r\n\r\n                    <Button\r\n                        onClick={refCortar}\r\n                    >Escolher imagem a ser cortada</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={uparCrop}>Salvar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    // Define frase que acompanhará foto\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\" onClick={uparFrase}>Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerA_Text\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerB_escolher\">\r\n                    <input\r\n                        href=\"#ContainerT\"\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={escolherImg}\r\n                        onClick={() => setContainer2(true)}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <button\r\n                        className=\"Btn\"\r\n                        onClick={refbtnEscolher}\r\n                    >Escolher imagem</button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"lin\" id=\"ContainerT\" />\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n            {container2 ? (\r\n                <>\r\n                    <div className=\"ContainerTwo\">\r\n\r\n                        <div className=\"container_bloco\">\r\n                            {imagens.map(item => {\r\n                                return (\r\n                                    <div className=\"bloco-imagem\">\r\n                                        <div className=\"imagem\">\r\n                                            {/* lista a imagem no bloco */}\r\n                                            <img src={item} />\r\n                                        </div>\r\n                                        <div className=\"container-buttons\">\r\n                                            {/* botão excluir */}\r\n                                            <Button onClick={() => excluirImg(item.id)} >Excluir</Button>\r\n\r\n                                            {/* Abre o cortar imagem */}\r\n                                            <Button\r\n                                                onClick={() => setModalcrop(true)}\r\n                                            >Cortar</Button>\r\n                                            <ModalCrop\r\n                                                show={modalcrop}\r\n                                                onHide={() => setModalcrop(false)}\r\n                                            />\r\n                                            {/* Abre o input para a frase da foto */}\r\n                                            <Button\r\n                                                onClick={() => setModalShow(true)}>\r\n                                                Frase\r\n                                    </Button>\r\n                                            <ModalFrase\r\n                                                show={modalShow}\r\n                                                onHide={() => setModalShow(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className=\"man\">\r\n                            <div className=\"container-subimit\">\r\n                                {<p>Você ainda pode escolher {limitador} imagens</p>}\r\n                                <div className=\"escolherdnv\">\r\n                                    <Link to=\"#\" className=\"Btn\"\r\n                                        onClick={uparImg} >SALVAR </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : null}\r\n\r\n            <div id=\"contact\" />\r\n            <div id=\"doubt\" />\r\n            <Footer />\r\n        </div >\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",["66","67","68","69","70","71","72","73","74","75","76"],"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx",["77","78","79","80","81","82"],"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["83","84"],"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["85"],"import \"./index.css\";\r\nimport React, { useState } from \"react\";\r\nimport { url } from \"../../utils/constants\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport Header from \"../../components/Header/index\";\r\n\r\nexport default function LoginCadastro() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailCadastro, setEmailCadastro] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [senhaCadastro, setSenhaCadastro] = useState(\"\");\r\n  const [telefone, setTelefone] = useState(\"\");\r\n  const [cep, setCep] = useState(\"\");\r\n  const [rua, setRua] = useState(\"\");\r\n  const [numero, setNumero] = useState(\"\");\r\n  const [complemento, setComplemento] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  // Faz o cadastro do usuário\r\n  const cadastrar = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Faz a conexão com o banco de dados\r\n    fetch(url + \"Usuario\", {\r\n      // Define o método que será utilizado\r\n      method: \"POST\",\r\n      // Define as informações que são necessárias para o login\r\n      body: JSON.stringify({\r\n        nome: nome,\r\n        email: emailCadastro,\r\n        senha: senhaCadastro,\r\n        telefone: telefone,\r\n        cep: cep,\r\n        rua: rua,\r\n        numero: numero,\r\n        complemento: complemento,\r\n        idPerfilAcesso: 1,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n      if (response.ok) {\r\n        console.log(response.json());\r\n\r\n        alert(\"Muito bem!, agora faça o Login\");\r\n        history.push(\"/LoginCadastro\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const logar = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(url + \"login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: email,\r\n        senha: senha,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // Verifica se a validação for OK e caso seja, informa a resposta\r\n        if (response.ok) return response.json();\r\n\r\n        // Caso validação não seja OK informa um alert\r\n        alert(\"Dado inválido\");\r\n      })\r\n      .then((data) => {\r\n        // Armazena o token\r\n        localStorage.setItem(\"token\", data.token);\r\n\r\n        let usuario = jwt_decode(data.token);\r\n\r\n        history.push(\"/uploadimagem\");\r\n\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n\r\n      <div className=\"loginCadastro\">\r\n        <section id=\"login\">\r\n          <Form onSubmit={(event) => logar(event)}>\r\n            <p>Faça o login</p>\r\n            <div className=\"field\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\"Insira seu e-mail\"\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"senha\"\r\n                value={senha}\r\n                placeholder=\"Insira sua senha\"\r\n                onChange={(event) => setSenha(event.target.value)}\r\n              />\r\n            </div>\r\n            <Button type=\"submit\" className=\"btnEnviar\">Logar</Button>\r\n          </Form>\r\n        </section>\r\n\r\n        <hr />\r\n\r\n        <section id=\"cadastro\">\r\n          <Form onSubmit={(event) => cadastrar(event)}>\r\n            <p>Faça o cadastro</p>\r\n            <div className=\"field\">\r\n              <label>Nome</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={nome}\r\n                placeholder=\"Nome e Sobrenome\"\r\n                onChange={(event) => setNome(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Email</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Insira um e-mail válido\"\r\n                value={emailCadastro}\r\n                onChange={(event) => setEmailCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Insira uma senha\"\r\n                name=\"senha\"\r\n                value={senhaCadastro}\r\n                onChange={(event) => setSenhaCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"telefone\">Telefone</label>\r\n              <input\r\n                required\r\n                type=\"tel\"\r\n                name=\"telefone\"\r\n                placeholder=\"(xx) xxxxx-xxxx\"\r\n                value={telefone}\r\n                onChange={(event) => setTelefone(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>CEP</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"xxxxx-xxx\"\r\n                name=\"cep\"\r\n                value={cep}\r\n                onChange={(event) => setCep(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Rua</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Insira sua rua\"\r\n                name=\"rua\"\r\n                value={rua}\r\n                onChange={(event) => setRua(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Numero</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"numero\"\r\n                value={numero}\r\n                onChange={(event) => setNumero(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Complemento</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"complemento\"\r\n                value={complemento}\r\n                placeholder=\"Se não houver, não preencha este campo\"\r\n                onChange={(event) => setComplemento(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\" className=\"btnEnviar\">Cadastrar</Button>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n      <div id=\"contact\" />\r\n      <div id=\"doubt\" />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js",[],["86","87"],"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",["88"],"import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport logoIN from '../../assets/img/001-instagram.svg'\r\nimport logoFB from '../../assets/img/002-facebook.svg'\r\nimport logoPT from '../../assets/img/003-pinterest.svg'\r\nimport emailjs from 'emailjs-com';\r\n\r\n\r\nexport default function Footer() {\r\n  function sendEmail(e) {\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('service_1gaplug', 'template_fuwm9ed', e.target, 'user_0wIRb9eHUQfkmEWEasXf1')\r\n      .then((result) => {\r\n        console.log(result.text);\r\n        alert('Menssagem enviada')\r\n      }, (error) => {\r\n        console.log(error.text);\r\n      });\r\n  }\r\n  return (\r\n    <footer id=\"rodape\">\r\n      <div className=\"container\">\r\n        <div className=\"flex\">\r\n          <div className=\"textFooter\">\r\n            <p>Pix4Fun</p>\r\n            <p>IMPRESSÃO DE FOTOS NO FORMATO POLAROID</p>\r\n            <a href=\"mailto:CONTATO@PIX4FUN.COM.BR\">CONTATO@PIX4FUN.COM.BR</a>\r\n          </div>\r\n\r\n          <form className=\"contact-form\" onSubmit={sendEmail}>\r\n            <input type=\"hidden\" name=\"contact_number\" />\r\n            <input type=\"text\" name=\"user_name\" placeholder= \"Nome\"/>\r\n            <input type=\"email\" name=\"user_email\" placeholder= \"E-mail\"/>\r\n            <textarea name=\"message\" placeholder= \"Adicione uma mensagem\"/>\r\n            <button className=\"btnEnviar\">ENVIAR</button> \r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"Footer\">\r\n          <p>©PIX4FUN Todos os direitos reservados. CNPJ 18.882.937/0001-01</p>\r\n          <p>SIGA-NOS EM NOSSAS REDES SOCIAIS PARA FICAR POR DENTRO DE TODAS AS\r\n            NOVIDADES!</p>\r\n        </div>\r\n\r\n        <div className=\"links\">\r\n          <a href=\"https://instagram.com/pix4funphoto\"><img src={logoIN} alt=\"Logo com link para o Instagram do pix4fun\" /></a>\r\n          <a href=\"https://www.facebook.com/pix4funphoto\"><img src={logoFB} alt=\"Logo com link para o Facebook do pix4fun\" /></a>\r\n          <a href=\"https://www.pinterest.com/\"><img src={logoPT} alt=\"Logo com link para o Pinterest do pix4fun\" /></a>\r\n        </div>\r\n\r\n        {\r\n          // Formulário com boostrap\r\n        }\r\n\r\n        {/* <Form onSubmit={event => enviarEmail(event)}>\r\n          <Form.Group controlId=\"formBasicContato\">\r\n          <Form.Control type=\"text\" placeholder=\"Nome\" value={nome} onChange={event => setNome(event.target.value)} />\r\n          <Form.Control type=\"text\" placeholder=\"Email\" value={email} onChange={event => setEmail(event.target.value)} />\r\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Mensagem\" value={mensagem} onChange={event => setMensagem(event.target.value)} />\r\n          </Form.Group>\r\n        </Form> */}\r\n      </div>\r\n    </footer>\r\n  );\r\n}","C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx",[],"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js",[],"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx",[],"C:\\Users\\gabri\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js",[],{"ruleId":"89","severity":1,"message":"90","line":8,"column":27,"nodeType":"91","messageId":"92","endLine":8,"endColumn":33},{"ruleId":"89","severity":1,"message":"93","line":14,"column":17,"nodeType":"91","messageId":"92","endLine":14,"endColumn":23},{"ruleId":"89","severity":1,"message":"94","line":17,"column":12,"nodeType":"91","messageId":"92","endLine":17,"endColumn":17},{"ruleId":"89","severity":1,"message":"95","line":17,"column":19,"nodeType":"91","messageId":"92","endLine":17,"endColumn":27},{"ruleId":"89","severity":1,"message":"96","line":19,"column":21,"nodeType":"91","messageId":"92","endLine":19,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":51,"column":23,"nodeType":"99","messageId":"100","endLine":51,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":51,"column":34,"nodeType":"99","messageId":"100","endLine":51,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":57,"column":25,"nodeType":"99","messageId":"100","endLine":57,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":60,"column":30,"nodeType":"99","messageId":"100","endLine":60,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":63,"column":30,"nodeType":"99","messageId":"100","endLine":63,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":66,"column":23,"nodeType":"99","messageId":"100","endLine":66,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":79,"column":27,"nodeType":"99","messageId":"100","endLine":79,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":83,"column":23,"nodeType":"99","messageId":"100","endLine":83,"endColumn":25},{"ruleId":"89","severity":1,"message":"94","line":131,"column":16,"nodeType":"91","messageId":"92","endLine":131,"endColumn":21},{"ruleId":"89","severity":1,"message":"95","line":131,"column":23,"nodeType":"91","messageId":"92","endLine":131,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":346,"column":45,"nodeType":"103","endLine":346,"endColumn":63},{"ruleId":"89","severity":1,"message":"104","line":16,"column":10,"nodeType":"91","messageId":"92","endLine":16,"endColumn":18},{"ruleId":"89","severity":1,"message":"105","line":16,"column":20,"nodeType":"91","messageId":"92","endLine":16,"endColumn":31},{"ruleId":"89","severity":1,"message":"106","line":17,"column":10,"nodeType":"91","messageId":"92","endLine":17,"endColumn":13},{"ruleId":"89","severity":1,"message":"107","line":17,"column":15,"nodeType":"91","messageId":"92","endLine":17,"endColumn":21},{"ruleId":"89","severity":1,"message":"108","line":18,"column":10,"nodeType":"91","messageId":"92","endLine":18,"endColumn":13},{"ruleId":"89","severity":1,"message":"109","line":18,"column":15,"nodeType":"91","messageId":"92","endLine":18,"endColumn":21},{"ruleId":"89","severity":1,"message":"110","line":19,"column":10,"nodeType":"91","messageId":"92","endLine":19,"endColumn":16},{"ruleId":"89","severity":1,"message":"111","line":19,"column":18,"nodeType":"91","messageId":"92","endLine":19,"endColumn":27},{"ruleId":"89","severity":1,"message":"112","line":20,"column":10,"nodeType":"91","messageId":"92","endLine":20,"endColumn":21},{"ruleId":"89","severity":1,"message":"113","line":20,"column":23,"nodeType":"91","messageId":"92","endLine":20,"endColumn":37},{"ruleId":"89","severity":1,"message":"114","line":77,"column":13,"nodeType":"91","messageId":"92","endLine":77,"endColumn":20},{"ruleId":"89","severity":1,"message":"115","line":8,"column":24,"nodeType":"91","messageId":"92","endLine":8,"endColumn":37},{"ruleId":"89","severity":1,"message":"116","line":11,"column":12,"nodeType":"91","messageId":"92","endLine":11,"endColumn":22},{"ruleId":"89","severity":1,"message":"117","line":11,"column":24,"nodeType":"91","messageId":"92","endLine":11,"endColumn":37},{"ruleId":"89","severity":1,"message":"118","line":12,"column":24,"nodeType":"91","messageId":"92","endLine":12,"endColumn":32},{"ruleId":"89","severity":1,"message":"96","line":69,"column":21,"nodeType":"91","messageId":"92","endLine":69,"endColumn":33},{"ruleId":"89","severity":1,"message":"119","line":76,"column":9,"nodeType":"91","messageId":"92","endLine":76,"endColumn":23},{"ruleId":"89","severity":1,"message":"120","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":4,"column":27,"nodeType":"91","messageId":"92","endLine":4,"endColumn":33},{"ruleId":"89","severity":1,"message":"114","line":82,"column":13,"nodeType":"91","messageId":"92","endLine":82,"endColumn":20},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"89","severity":1,"message":"120","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'setDes' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'setQntdItens' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'telefone' is assigned a value but never used.","'setTelefone' is assigned a value but never used.","'cep' is assigned a value but never used.","'setCep' is assigned a value but never used.","'rua' is assigned a value but never used.","'setRua' is assigned a value but never used.","'numero' is assigned a value but never used.","'setNumero' is assigned a value but never used.","'complemento' is assigned a value but never used.","'setComplemento' is assigned a value but never used.","'usuario' is assigned a value but never used.","'setListarImgs' is assigned a value but never used.","'cartNumber' is assigned a value but never used.","'setCartNumber' is assigned a value but never used.","'setFrete' is assigned a value but never used.","'descontoEcusto' is assigned a value but never used.","'useState' is defined but never used.","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-global-assign","no-unsafe-negation"]