[{"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\index.js":"1","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"3","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx":"4","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx":"5","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js":"6","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"7","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"8","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"9","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"10","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx":"11"},{"size":944,"mtime":1614698393083,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1614698393091,"results":"14","hashOfConfig":"13"},{"size":6995,"mtime":1614875394142,"results":"15","hashOfConfig":"13"},{"size":47,"mtime":1614698393092,"results":"16","hashOfConfig":"13"},{"size":4565,"mtime":1614698393079,"results":"17","hashOfConfig":"13"},{"size":697,"mtime":1614698393082,"results":"18","hashOfConfig":"13"},{"size":2777,"mtime":1614698393078,"results":"19","hashOfConfig":"13"},{"size":13615,"mtime":1615238016792,"results":"20","hashOfConfig":"13"},{"size":12908,"mtime":1614698393087,"results":"21","hashOfConfig":"13"},{"size":8941,"mtime":1615487386172,"results":"22","hashOfConfig":"13"},{"size":7005,"mtime":1615998884505,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11ran25",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\index.js",[],["52","53"],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js",[],["54","55"],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["56"],"import \"./index.css\";\r\nimport React, { useState } from \"react\";\r\nimport { url } from \"../../utils/constants\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport Header from \"../../components/Header/index\";\r\n\r\nexport default function LoginCadastro() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailCadastro, setEmailCadastro] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [senhaCadastro, setSenhaCadastro] = useState(\"\");\r\n  const [telefone, setTelefone] = useState(\"\");\r\n  const [cep, setCep] = useState(\"\");\r\n  const [rua, setRua] = useState(\"\");\r\n  const [numero, setNumero] = useState(\"\");\r\n  const [complemento, setComplemento] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  // Faz o cadastro do usuário\r\n  const cadastrar = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Faz a conexão com o banco de dados\r\n    fetch(url + \"usuario\", {\r\n      // Define o método que será utilizado\r\n      method: \"POST\",\r\n      // Define as informações que são necessárias para o login\r\n      body: JSON.stringify({\r\n        nome: nome,\r\n        email: emailCadastro,\r\n        senha: senhaCadastro,\r\n        telefone: telefone,\r\n        rua: rua,\r\n        numero: numero,\r\n        complemento: complemento,\r\n        cep: cep,\r\n        idPerfilAcesso: 1,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n      if (response.ok) {\r\n        console.log(response.json());\r\n\r\n        alert(\"Usuario cadastrado.\");\r\n        history.push(\"/uploadimagem\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const logar = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(url + \"login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: email,\r\n        senha: senha,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // Verifica se a validação for OK e caso seja, informa a resposta\r\n        if (response.ok) return response.json();\r\n\r\n        // Caso validação não seja OK informa um alert\r\n        alert(\"Dado inválido\");\r\n      })\r\n      .then((data) => {\r\n        // Armazena o token\r\n        localStorage.setItem(\"token\", data.token);\r\n\r\n        let usuario = jwt_decode(data.token);\r\n\r\n        history.push(\"/uploadimagem\");\r\n\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n\r\n      <div className=\"loginCadastro\">\r\n        <section id=\"login\">\r\n          <Form onSubmit={(event) => logar(event)}>\r\n            <p>Faça o login</p>\r\n            <div className=\"field\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\"Insira seu e-mail\"\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"senha\"\r\n                value={senha}\r\n                placeholder=\"Insira sua senha\"\r\n                onChange={(event) => setSenha(event.target.value)}\r\n              />\r\n            </div>\r\n            <Button type=\"submit\" className=\"btnEnviar\">Logar</Button>\r\n          </Form>\r\n        </section>\r\n\r\n        <hr />\r\n\r\n        <section id=\"cadastro\">\r\n          <Form onSubmit={(event) => cadastrar(event)}>\r\n            <p>Faça o cadastro</p>\r\n            <div className=\"field\">\r\n              <label>Nome</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={nome}\r\n                placeholder=\"Nome e Sobrenome\"\r\n                onChange={(event) => setNome(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Email</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Insira um e-mail válido\"\r\n                value={emailCadastro}\r\n                onChange={(event) => setEmailCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Insira uma senha\"\r\n                name=\"senha\"\r\n                value={senhaCadastro}\r\n                onChange={(event) => setSenhaCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"telefone\">Telefone</label>\r\n              <input\r\n                required\r\n                type=\"tel\"\r\n                name=\"telefone\"\r\n                placeholder=\"(xx) xxxxx-xxxx\"\r\n                value={telefone}\r\n                onChange={(event) => setTelefone(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>CEP</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"xxxxx-xxx\"\r\n                name=\"cep\"\r\n                value={cep}\r\n                onChange={(event) => setCep(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Rua</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Insira sua rua\"\r\n                name=\"rua\"\r\n                value={rua}\r\n                onChange={(event) => setRua(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Numero</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"numero\"\r\n                value={numero}\r\n                onChange={(event) => setNumero(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Complemento</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"complemento\"\r\n                value={complemento}\r\n                placeholder=\"Se não houver, não preencha este campo\"\r\n                onChange={(event) => setComplemento(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\" className=\"btnEnviar\">Cadastrar</Button>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n      <div id=\"contact\" />\r\n      <div id=\"doubt\" />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx",[],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx",[],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js",[],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",["57"],"C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72"],"import React, { useImperativeHandle, useState } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport './index.css';\r\nimport { event, get } from 'jquery';\r\n\r\nconst UploadImagem = () => {\r\n    const [imagens, setImagens] = useState([])\r\n    const [imagenss, setImagenss] = useState([])\r\n    const [limitador, setLimitador] = useState(0)\r\n    const [des, setDes] = useState(-1)\r\n    const [li, setLi] = useState('oi')\r\n    const [container2, setContainer2] = React.useState(null)\r\n    const [image, setImage] = React.useState(null)\r\n    const [qtdImgs, setQntdItens] = React.useState(localStorage.getItem(\"produtoinCart\"))\r\n    const [frase, setFrase] = useState('')\r\n    const keys = qtdImgs.split(' ')\r\n    const [modalShow, setModalShow] = React.useState(false)\r\n    const [modalcrop, setModalcrop] = React.useState(false)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const refCortar = () => inputCortar.current.click();\r\n\r\n    // Upa imagem para a api\r\n    const uparFrase = () => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:3000/api/Foto/FraseFoto', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // componente que escolhe a imagem\r\n    const escolherImg = event => {\r\n\r\n        var pack6 = 5;\r\n        var pack12 = 11;\r\n        var pack18 = 17;\r\n\r\n        console.log(keys)\r\n\r\n\r\n        // Verificação para limitar quantidade de fotos escolhidas\r\n        if (limitador == 0 && li == 'oi') {\r\n            // seleciona a foto\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n            setImagenss({\r\n                selected: imagenss\r\n            })\r\n            if (keys[2] == 6) {\r\n                setLimitador(limitador + pack6)\r\n            }\r\n            else if (keys[2] == 12) {\r\n                setLimitador(limitador + pack12);\r\n            }\r\n            else if (keys[2] == 18) {\r\n                setLimitador(limitador + pack18);\r\n            }\r\n        } else if (li == 'oi') {\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n            setImagenss({\r\n                selected: imagenss\r\n            })\r\n\r\n            setLimitador(limitador + des)\r\n\r\n            if (limitador == 1) {\r\n                alert('Pronto! agora basta enviar as fotos')\r\n                setLi('hoje');\r\n            }\r\n        } else if (li == 'hoje') {\r\n            alert('voce não pode mais selecionar imagens')\r\n        }\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = (event) => {\r\n        // if (limitador > 0) {\r\n        //     alert('você ainda pode selecionar mais fotos')\r\n        // } else {\r\n\r\n        console.log(imagens.map(imgMap =>{\r\n           return imgMap\r\n        }))\r\n\r\n        const fd = new FormData();\r\n        fd.append('image', imagens)\r\n        fetch('http://localhost:5000/api/Foto', fd)\r\n                    \r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n\r\n\r\n\r\n        // }\r\n    }\r\n\r\n\r\n    function excluirImg(index) {\r\n        var i = 1\r\n        const list = Array.from(imagens)\r\n        list.splice(index, 1);\r\n\r\n        setImagens(list);\r\n        setLi('oi')\r\n        setLimitador(limitador + i);\r\n    }\r\n\r\n\r\n\r\n    function ModalCrop(props) {\r\n        //Componente que define a area do crop\r\n        const onCropComplete = (cropPixels) => {\r\n            setCroppedarea(cropPixels)\r\n            console.log(croppedarea)\r\n        }\r\n\r\n        // Componente que escolhe a imagem e o corta \r\n        const AbrirCrop = (event, props) => {\r\n\r\n            const reader = new FileReader();\r\n\r\n            if (event.target.files[0]) {\r\n                reader.readAsDataURL(event.target.files[0])\r\n                reader.addEventListener(\"load\", () => {\r\n                    setImage(reader.result)\r\n                })\r\n            }\r\n        };\r\n\r\n        const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n        const [zoom, setZoom] = React.useState(1)\r\n        const [aspect, setAspect] = React.useState(0)\r\n        const [croppedarea, setCroppedarea] = React.useState(null)\r\n\r\n        function Dime3() {\r\n            setAspect({\r\n                asp: 0.9\r\n            })\r\n        }\r\n\r\n        function Dime2() {\r\n            setAspect({\r\n                asp: 2.1\r\n            })\r\n        }\r\n\r\n        function Dime1() {\r\n            setAspect({\r\n                asp: 1\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Recorte a imagem\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {image ? (\r\n                        <>\r\n                            <div className=\"btns\" >\r\n                                <Button onClick={Dime2}>Paisagem</Button>\r\n                                <Button onClick={Dime1}>Quadrado</Button>\r\n                                <Button onClick={Dime3}>Retrato</Button>\r\n                            </div>\r\n                            <div className=\"container-cropper\" >\r\n                                <div className='cropper'>\r\n                                    <Cropper\r\n                                        image={image}\r\n                                        crop={crop}\r\n                                        zoom={zoom}\r\n                                        aspect={aspect.asp}\r\n                                        onCropChange={setCrop}\r\n                                        onZoomChange={setZoom}\r\n                                        onCropComplete={onCropComplete}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='slider'>\r\n                                    <Slider\r\n                                        min={1}\r\n                                        max={6}\r\n                                        step={0.1}\r\n                                        value={zoom}\r\n                                        onChange={(e, zoom) => setZoom(zoom)}\r\n                                        color='secondary'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <input\r\n                        type=\"file\"\r\n                        ref={inputCortar}\r\n                        accept='image/*'\r\n                        style={{ display: 'none' }}\r\n                        onChange={AbrirCrop}\r\n                    />\r\n                    <Button\r\n                        onClick={refCortar}\r\n                    >Escolher imagem a ser cortada</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    // Define frase que acompanhará foto\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\" onClick={uparFrase}>Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerA_Text\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerB_escolher\">\r\n                    <input\r\n                        href=\"#ContainerT\"\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={escolherImg}\r\n                        onClick={() => setContainer2(true)}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <button\r\n                        className=\"Btn\"\r\n                        onClick={refbtnEscolher}\r\n                    >Escolher imagem</button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"lin\" id=\"ContainerT\" />\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n            {container2 ? (\r\n                <>\r\n                    <div className=\"ContainerTwo\">\r\n\r\n                        <div className=\"container_bloco\">\r\n                            {imagens.map(item => {\r\n                                return (\r\n                                    <div className=\"bloco-imagem\">\r\n                                        <div className=\"imagem\">\r\n                                            {/* lista a imagem no bloco */}\r\n                                            <img src={item} />\r\n                                        </div>\r\n                                        <div className=\"container-buttons\">\r\n                                            {/* botão excluir */}\r\n                                            <Button onClick={() => excluirImg(item.id)} >Excluir</Button>\r\n\r\n                                            {/* Abre o cortar imagem */}\r\n                                            <Button\r\n                                                onClick={() => setModalcrop(true)}\r\n                                            >Cortar</Button>\r\n                                            <ModalCrop\r\n                                                show={modalcrop}\r\n                                                onHide={() => setModalcrop(false)}\r\n                                            />\r\n                                            {/* Abre o input para a frase da foto */}\r\n                                            <Button\r\n                                                onClick={() => setModalShow(true)}>\r\n                                                Frase\r\n                                    </Button>\r\n                                            <ModalFrase\r\n                                                show={modalShow}\r\n                                                onHide={() => setModalShow(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className=\"man\">\r\n                            <div className=\"container-subimit\">\r\n                                {<p>Você ainda pode escolher {limitador} imagens</p>}\r\n                                <div className=\"escolherdnv\">\r\n                                    <button\r\n                                        className=\"Btn\"\r\n                                        onClick={refbtnEscolher}\r\n                                    >ESCOLHER OUTRA IMAGEM</button>\r\n                                    <Link to=\"#\" className=\"Btn\"\r\n                                        onClick={uparImg} multiple>SALVAR </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : null}\r\n\r\n            <div id=\"contact\" />\r\n            <div id=\"doubt\" />\r\n            <Footer />\r\n        </div >\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["73","74"],"import React, { useState } from \"react\";\r\nimport Header from \"../../components/Header/index\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nexport default function Home() {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // array que da valor aos botões comprar\r\n  let produtos = [\r\n    {\r\n      name: 'Pack com 6 fotos polaroid',\r\n      price: 17.99,\r\n      qtd: 6,\r\n      inCart: 0\r\n    }\r\n  ]\r\n\r\n  let produtos1 = [\r\n    {\r\n      name: 'Pack com 12 fotos polaroid',\r\n      price: 21.99,\r\n      qtd: 6,\r\n      inCart: 0\r\n    }\r\n  ]\r\n  let produtos2 = [\r\n    {\r\n      name: 'Pack com 18 fotos polaroid',\r\n      price: 26.99,\r\n      qtd: 6,\r\n      inCart: 0\r\n    }\r\n  ]\r\n  \r\n  // Botões que direcionam para pagina de login ou upload\r\n  function botaoComprar() {\r\n    if (token === null) {\r\n      return (\r\n        <Link\r\n          onClick={(i) => {\r\n            cartsnumber(produtos[i]);\r\n            custoTotal(produtos[i]);\r\n          }}\r\n          id=\"bota\" to=\"/LoginCadastro\" className=\"buyButton\" >\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link\r\n          onClick={(i) => {\r\n            cartsnumber(produtos[i]);\r\n            custoTotal(produtos[i]);\r\n          }}\r\n          id=\"bota\" to=\"/uploadimagem\" className=\"buyButton\">\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n  function botaoComprar2() {\r\n    if (token === null) {\r\n      return (\r\n        <Link\r\n          onClick={(i) => {\r\n            cartsnumber1(produtos1[i]);\r\n            custoTotal(produtos1[i]);\r\n          }}\r\n          id=\"bota\" to=\"/LoginCadastro\" className=\"buyButton\" >\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link\r\n          onClick={(i) => {\r\n            cartsnumber1(produtos1[i]);\r\n            custoTotal(produtos1[i]);\r\n          }}\r\n          id=\"bota\" to=\"/uploadimagem\" className=\"buyButton\">\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n  function botaoComprar3() {\r\n    if (token === null) {\r\n      return (\r\n        <Link\r\n          onClick={(i) => {\r\n            cartsnumber2(produtos2[i]);\r\n            custoTotal(produtos2[i]);\r\n          }}\r\n          id=\"bota\" to=\"/LoginCadastro\" className=\"buyButton\" >\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link\r\n          onClick={(i) => {\r\n            cartsnumber2(produtos2[i]);\r\n            custoTotal(produtos2[i]);\r\n          }}\r\n          id=\"bota\" to=\"/uploadimagem\" className=\"buyButton\">\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  function cartsnumber() {\r\n    let productnumber = localStorage.getItem('cartNumber');\r\n\r\n    productnumber = parseInt(productnumber);\r\n\r\n    if (productnumber) {\r\n      localStorage.setItem('cartNumber', productnumber + 1);\r\n    } else {\r\n      localStorage.setItem('cartNumber', 1);\r\n    }\r\n    setItems(produtos)\r\n  }\r\n\r\n  //  cria um array com os produtos selecionados: para ver os mesmos é necessario ir a application no console e selecionar um produto\r\n  function setItems() {\r\n    let cartItems = localStorage.getItem('produtoinCart');\r\n    console.log(cartItems)\r\n    cartItems = JSON.parse(cartItems)\r\n\r\n    if (cartItems != null) {\r\n      if (cartItems[produtos.name] === undefined) {\r\n        cartItems = {\r\n          ...cartItems,\r\n          [produtos.name]: produtos\r\n        }\r\n      }\r\n      cartItems[produtos.name].inCart += 1;\r\n    } else {\r\n      produtos.inCart = 1;\r\n      cartItems = {\r\n        [produtos.name]: produtos\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('produtoinCart', JSON.stringify(cartItems))\r\n  }\r\n\r\n  function cartsnumber1() {\r\n    let productnumber = localStorage.getItem('cartNumber');\r\n\r\n    productnumber = parseInt(productnumber);\r\n\r\n    if (productnumber) {\r\n      localStorage.setItem('cartNumber', productnumber + 1);\r\n    } else {\r\n      localStorage.setItem('cartNumber', 1);\r\n    }\r\n    setItems1(produtos1)\r\n  }\r\n\r\n  //  cria um array com os produtos selecionados: para ver os mesmos é necessario ir a application no console e selecionar um produto\r\n  function setItems1() {\r\n    let cartItems = localStorage.getItem('produtoinCart');\r\n    cartItems = JSON.parse(cartItems)\r\n\r\n    if (cartItems != null) {\r\n      if (cartItems[produtos1.name] === undefined) {\r\n        cartItems = {\r\n          ...cartItems,\r\n          [produtos1.name]: produtos1\r\n        }\r\n      }\r\n      cartItems[produtos1.name].inCart += 1;\r\n    } else {\r\n      produtos1.inCart = 1;\r\n      cartItems = {\r\n        [produtos1.name]: produtos1\r\n      }\r\n    }\r\n    localStorage.setItem('produtoinCart', JSON.stringify(cartItems))\r\n  }\r\n\r\n  function cartsnumber2() {\r\n    let productnumber = localStorage.getItem('cartNumber');\r\n\r\n    productnumber = parseInt(productnumber);\r\n\r\n    if (productnumber) {\r\n      localStorage.setItem('cartNumber', productnumber + 1);\r\n    } else {\r\n      localStorage.setItem('cartNumber', 1);\r\n    }\r\n    setItems2(produtos2)\r\n  }\r\n\r\n  //  cria um array com os produtos selecionados: para ver os mesmos é necessario ir a application no console e selecionar um produto\r\n  function setItems2() {\r\n    let cartItems = localStorage.getItem('produtoinCart');\r\n    cartItems = JSON.parse(cartItems)\r\n\r\n    if (cartItems != null) {\r\n      if (cartItems[produtos2.name] === undefined) {\r\n        cartItems = {\r\n          ...cartItems,\r\n          [produtos2.name]: produtos2\r\n        }\r\n      }\r\n      cartItems[produtos2.name].inCart += 1;\r\n    } else {\r\n      produtos2.inCart = 1;\r\n      cartItems = {\r\n        [produtos2.name]: produtos2\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('produtoinCart', JSON.stringify(cartItems))\r\n  }\r\n\r\n\r\n\r\n\r\n  // Calcula o preço total\r\n  function custoTotal() {\r\n\r\n    let custo = localStorage.getItem('custoTotal');\r\n    console.log(typeof custo);\r\n\r\n    if (custo != null) {\r\n      custo = parseInt(custo);\r\n      localStorage.setItem('custoTotal', custo + produtos.price);\r\n    } else {\r\n      localStorage.setItem('custoTotal', produtos.price);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"mainBanner\">\r\n        <h1>IMPRIMA SUAS MEMÓRIAS COM ESTILO</h1>\r\n        <a href=\"#summary\" className=\"btnMainBanner\">\r\n          CONHEÇA\r\n        </a>\r\n      </div>\r\n      <div className=\"container\">\r\n        <section id=\"summary\">\r\n          <h2>VEJA COMO É FÁCIL</h2>\r\n          <div className=\"summaryCards\">\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary\">1</p>\r\n              <div>\r\n                <h3>ESCOLHA SEU PACK</h3>\r\n                <p>Temos packs com 6, 12 e 18 fotos.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary2\">2</p>\r\n              <div>\r\n                <h3>ENVIE SUAS FOTOS</h3>\r\n                <p>\r\n                  Cliquem em comprar no pack escolhido, escolha suas fotos,\r\n                  edite-as e nos envie.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary3\">3</p>\r\n              <div>\r\n                <h3>PRONTO</h3>\r\n                <p>\r\n                  Finalize com o pagamento, endereço de envio e pronto; agora é\r\n                  só aguardar suas fotos chegarem na sua casa.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section id=\"buy\">\r\n          <h2>VAMOS EXPERIMENTAR?</h2>\r\n          <div className=\"packs\">\r\n            <div className=\"pack1\">\r\n              <h3>PACK COM 6</h3>\r\n              <div className=\"limitImg\">\r\n                <div className=\"imgPack1\" />\r\n              </div>\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 17,99</h4>\r\n              </div>\r\n              <div className=\"buy buy1\">\r\n                {botaoComprar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"pack2\">\r\n              <h3>PACK COM 12</h3>\r\n              <div className=\"limitImg\">\r\n                <div className=\"imgPack2\" />\r\n              </div>\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 21,99</h4>\r\n              </div>\r\n              <div className=\"buy buy2\">\r\n                {botaoComprar2()}\r\n              </div>\r\n            </div>\r\n            <div className=\"pack3\">\r\n              <h3>PACK COM 18</h3>\r\n              <div className=\"limitImg\">\r\n                <div className=\"imgPack3\" />\r\n              </div>\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 26,99</h4>\r\n              </div>\r\n              <div className=\"buy buy3\">\r\n                {botaoComprar3()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section id=\"faq\">\r\n          <h2>F.A.Q</h2>\r\n          <div className=\"pergunta\">\r\n            <h4>Em que material serão reveladas as minhas fotos?</h4>\r\n            <p>\r\n              Suas fotos serão reveladas em papel fotográfico Kodak® em\r\n              laboratório fotográfico profissional.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>QUAIS as formas DE PAGAMENTO?</h4>\r\n            <p>\r\n              Trabalhamos com a plataforma de pagamentos do Pagseguro, portanto\r\n              aceitamos cartões e boleto.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>COMO Serão Enviadas as minhas fotos?</h4>\r\n            <p>\r\n              Suas fotos serão enviadas por carta registrada através do Correios\r\n              em uma embalagem PIX4FUN personalizada com frete fixo de R$10,00.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>EM QUANTO TEMPO RECEBEREI MINHAS FOTOS?</h4>\r\n            <p>\r\n              Após confirmado o pagamento, pedimos um prazo de 3 dias para a\r\n              produção. Logo após passa a vigorar o prazo de entrega de carta\r\n              registrada dos Correios, que leva de 3 a 14 dias úteis dependendo\r\n              da região.\r\n            </p>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <div>\r\n        <div id=\"contact\" />\r\n        <div id=\"doubt\" />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",["75","76","77","78","79","80"],"import { encode } from 'iconv-lite';\r\nimport React, { useState } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport TrackingEvents from '../../components/TrackingEvents';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './index.css';\r\n\r\nexport default function Pagamento() {\r\n\r\n    //VARIÁVEIS CUPOM\r\n    const [idCupom, setIdCupom] = useState('')\r\n    const [valorDesconto, setValorDesconto] = useState('')\r\n    const [dataValidade, setDataValidade] = useState('')\r\n    const [palavraChave, setPalavraChave] = useState('')\r\n    const [id, setId] = useState('')\r\n\r\n\r\n    //VARIÁVEIS PACK \r\n    const [tipoPack, setTipoPack] = useState('')\r\n    const [preco, setPreco] = useState('')\r\n\r\n    //VARIAVEIS PEDIDO \r\n    const [idUsuario, setIdUsuaro] = useState('')\r\n    const [idPack, setIdPack] = useState('')\r\n    const [statusPedido, setStatusPedido] = useState('')\r\n\r\n\r\n\r\n    const [listar, setListar] = useState([])\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    // // const [frete, setFrete] = React.useState(localStorage.getItem(' '))\r\n\r\n    // const [events, setEvents] = useState([]);\r\n\r\n    // const submitHandler = (event) => {\r\n    //     event.preventDefault();\r\n\r\n    //     const formData = new FormData(event.target);\r\n    //     const data = Object.fromEntries(formData);\r\n\r\n    //     fetch('http://localhost:3001/?tracking=' + data.tracking)\r\n    //         .then(response => response.json())\r\n    //         .then(data => {\r\n    //             const events = data.events;\r\n    //             setEvents(events);\r\n    //         })\r\n    //         .catch(console.error);\r\n    // };\r\n\r\n    // function main() {\r\n    //     const encodeString = \"729799107101114328297110107\";\r\n\r\n    //     const result = here(encodeString);\r\n    // }\r\n\r\n    // function here(encodeString) {\r\n    //     '729799107101114328297110107'.charCodeAt(0);\r\n    // }\r\n\r\n    // var balde = 2\r\n    // var parede = parseInt(window.prompt(\"Tamanho da parede em metros: \"))\r\n    // var x = parede/2;\r\n    // console.log(\"Você precisara de \", x, \"baldes de tinta\")\r\n\r\n\r\n    //crud do cupom \r\n    const listarCupom = () => {\r\n        fetch('http://localhost:5000/api/Cupom', {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n\r\n            })\r\n    }\r\n\r\n    const adicionarCupom = (event) => {\r\n        event.preventDefault();\r\n\r\n        fetch(\"http://localhost:5000/api/Cupom\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                valorDesconto: valorDesconto,\r\n                dataValidade: dataValidade,\r\n                palavraChave: palavraChave\r\n            })\r\n        }).then((response) => {\r\n            // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n            if (response.ok) {\r\n                console.log(response.json());\r\n\r\n                alert(\"Cupom cadastrado.\");\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    function excluirCupom() {\r\n        fetch(\"http://localhost:5000/api/Cupom/\" + id, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                id: id\r\n            }\r\n        }).then((response) => {\r\n            // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n            if (response.ok) {\r\n                console.log(response.json());\r\n                alert(\"Cupom excluido.\");\r\n\r\n            } else {\r\n                console.log(response.json())\r\n                alert(\"nao foi possível deletar o cupom \")\r\n            }\r\n        })\r\n    }\r\n\r\n    const listarPack = () => {\r\n        fetch(\"http://localhost:5000/api/Pack\", {\r\n            method: \"GET\"\r\n        }).then(res => {\r\n            console.log(res)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const adicionarPack = () => {\r\n        fetch(\"http://localhost:5000/api/Pack\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                tipoPack: tipoPack,\r\n                preco: preco\r\n            })\r\n        }).then((response) => {\r\n            // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n            if (response.ok) {\r\n                console.log(response.json());\r\n\r\n                alert(\"Pack cadastrado.\");\r\n            } else {\r\n                console.log(response.json())\r\n                alert(\"nao foi possível cadastrar o pack\")\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function excluirPack() {\r\n        fetch(\"http://localhost:5000/api/Pack/\" + id, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                id: id\r\n            }\r\n        }).then((response) => {\r\n            // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n            if (response.ok) {\r\n                console.log(response.json());\r\n                alert(\"Pack excluido.\");\r\n\r\n            } else {\r\n                console.log(response.json())\r\n                alert(\"nao foi possível deletar o pack \")\r\n            }\r\n        })\r\n    }\r\n\r\n    const listarPedidos = () => {\r\n        fetch(\"http://localhost:5000/api/Pack\", {\r\n            method: \"GET\"\r\n        }).then(res => {\r\n            console.log(res)\r\n\r\n        }).then(data => {\r\n            setListar(data)\r\n            console.log(data)\r\n        })\r\n    }\r\n    \r\n    const adicionarPedido = () => {\r\n        fetch(\"http://localhost:5000/api/Pedido\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            body: {\r\n                idUsuario : idUsuario,\r\n                idPack : idPack,\r\n                statusPedido: statusPedido\r\n            }\r\n        }).then((response) => {\r\n            // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n            if (response.ok) {\r\n                console.log(response.json());\r\n\r\n                alert(\"Pedido cadastrado.\");\r\n            } else {\r\n                console.log(response.json())\r\n                alert(\"nao foi possível cadastrar o pedido\")\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        // main(),\r\n        <div className=\"bloco\">\r\n            <Header />\r\n            <button className=\"uhul\" onClick={listarCupom}>Listar Cupom</button>\r\n\r\n            <form action=\"POST\" onSubmit={(event) => adicionarCupom(event)} className=\"cadastroCupom\">\r\n                <label>Palavra Chave</label>\r\n                <input type=\"text\" onChange={e => setPalavraChave(e.target.value)}></input>\r\n                <label>Data de Validade</label>\r\n                <input type=\"date\" onChange={e => setDataValidade(e.target.value)}></input>\r\n                <label>Valor do desconto</label>\r\n                <input onChange={e => setValorDesconto(e.target.value)}></input>\r\n                <button type=\"submit\">Adicionar</button>\r\n            </form>\r\n\r\n\r\n            <form onSubmit={(event) => excluirCupom(event)} className=\"excluirCupom\">\r\n                <label>Id do cupom a ser excluído</label>\r\n                <input type=\"number\" onChange={e => setId(e.target.value)} ></input>\r\n                <button type=\"submit\">Excluir</button>\r\n            </form>\r\n\r\n            <button className=\"uhul\" onClick={listarPack}>Listar Pack</button>\r\n\r\n            <form onSubmit={(event) => adicionarPack(event)} className=\"cadastroCupom\">\r\n                <label>Tipo pack</label>\r\n                <input type=\"text\" onChange={e => setTipoPack(e.target.value)}></input>\r\n                <label>Preço</label>\r\n                <input onChange={e => setPreco(e.target.value)}></input>\r\n                <button type=\"submit\">Adicionar pack</button>\r\n            </form>\r\n\r\n            <form onSubmit={(event) => excluirPack(event)} className=\"excluirCupom\">\r\n                <label>Id do pack a ser excluído</label>\r\n                <input type=\"number\" onChange={e => setId(e.target.value)} ></input>\r\n                <button type=\"submit\">Excluir</button>\r\n            </form>\r\n\r\n            <button className=\"uhul\" onClick={listarPedidos}>Listar Pack</button>\r\n\r\n            <form onSubmit={(event) => adicionarPedido(event)} className=\"cadastroCupom\">\r\n                <label>IdUsuario</label>\r\n                <input type=\"number\" onChange={e => setIdUsuaro(e.target.value)}></input>\r\n                <label>Id Pack</label>\r\n                <input onChange={e => setIdPack(e.target.value)}></input>\r\n                <label>status</label>\r\n                <input onChange={e => setStatusPedido(e.target.value)}></input>\r\n                <button type=\"submit\">Adicionar pedido</button>\r\n            </form>\r\n\r\n            <Footer />\r\n        </div>\r\n    )\r\n    }","C:\\Users\\user\\Documents\\Ana Laura\\Projetinhos\\Pix4Fun\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx",["81","82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":82,"column":13,"nodeType":"94","messageId":"95","endLine":82,"endColumn":20},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"98","line":8,"column":27,"nodeType":"94","messageId":"95","endLine":8,"endColumn":33},{"ruleId":"92","severity":1,"message":"99","line":10,"column":10,"nodeType":"94","messageId":"95","endLine":10,"endColumn":15},{"ruleId":"92","severity":1,"message":"100","line":10,"column":17,"nodeType":"94","messageId":"95","endLine":10,"endColumn":20},{"ruleId":"92","severity":1,"message":"101","line":16,"column":17,"nodeType":"94","messageId":"95","endLine":16,"endColumn":23},{"ruleId":"92","severity":1,"message":"102","line":20,"column":21,"nodeType":"94","messageId":"95","endLine":20,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":55,"column":23,"nodeType":"105","messageId":"106","endLine":55,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":55,"column":34,"nodeType":"105","messageId":"106","endLine":55,"endColumn":36},{"ruleId":"103","severity":1,"message":"104","line":61,"column":25,"nodeType":"105","messageId":"106","endLine":61,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":64,"column":30,"nodeType":"105","messageId":"106","endLine":64,"endColumn":32},{"ruleId":"103","severity":1,"message":"104","line":67,"column":30,"nodeType":"105","messageId":"106","endLine":67,"endColumn":32},{"ruleId":"103","severity":1,"message":"104","line":70,"column":23,"nodeType":"105","messageId":"106","endLine":70,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":78,"column":27,"nodeType":"105","messageId":"106","endLine":78,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":82,"column":23,"nodeType":"105","messageId":"106","endLine":82,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":306,"column":45,"nodeType":"109","endLine":306,"endColumn":63},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"98","line":4,"column":27,"nodeType":"94","messageId":"95","endLine":4,"endColumn":33},{"ruleId":"92","severity":1,"message":"110","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":16},{"ruleId":"92","severity":1,"message":"111","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":22},{"ruleId":"92","severity":1,"message":"112","line":12,"column":12,"nodeType":"94","messageId":"95","endLine":12,"endColumn":19},{"ruleId":"92","severity":1,"message":"113","line":12,"column":21,"nodeType":"94","messageId":"95","endLine":12,"endColumn":31},{"ruleId":"92","severity":1,"message":"114","line":30,"column":12,"nodeType":"94","messageId":"95","endLine":30,"endColumn":18},{"ruleId":"92","severity":1,"message":"115","line":32,"column":11,"nodeType":"94","messageId":"95","endLine":32,"endColumn":18},{"ruleId":"92","severity":1,"message":"116","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"117","line":9,"column":24,"nodeType":"94","messageId":"95","endLine":9,"endColumn":37},{"ruleId":"92","severity":1,"message":"118","line":12,"column":24,"nodeType":"94","messageId":"95","endLine":12,"endColumn":37},{"ruleId":"92","severity":1,"message":"119","line":13,"column":24,"nodeType":"94","messageId":"95","endLine":13,"endColumn":32},{"ruleId":"92","severity":1,"message":"120","line":76,"column":9,"nodeType":"94","messageId":"95","endLine":76,"endColumn":23},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],"no-unused-vars","'usuario' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useImperativeHandle' is defined but never used.","'Router' is defined but never used.","'event' is defined but never used.","'get' is defined but never used.","'setDes' is assigned a value but never used.","'setQntdItens' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'encode' is defined but never used.","'TrackingEvents' is defined but never used.","'idCupom' is assigned a value but never used.","'setIdCupom' is assigned a value but never used.","'listar' is assigned a value but never used.","'history' is assigned a value but never used.","'Footer' is defined but never used.","'setListarImgs' is assigned a value but never used.","'setCartNumber' is assigned a value but never used.","'setFrete' is assigned a value but never used.","'descontoEcusto' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]