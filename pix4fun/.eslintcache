[{"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js":"1","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"2","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"3","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"4","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx":"5","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx":"6","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"7","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"8"},{"size":847,"mtime":1608611529665,"results":"9","hashOfConfig":"10"},{"size":6994,"mtime":1608261062037,"results":"11","hashOfConfig":"10"},{"size":3271,"mtime":1608002570568,"results":"12","hashOfConfig":"10"},{"size":11907,"mtime":1608788455145,"results":"13","hashOfConfig":"10"},{"size":3720,"mtime":1608766786523,"results":"14","hashOfConfig":"10"},{"size":47,"mtime":1607748830930,"results":"15","hashOfConfig":"10"},{"size":6928,"mtime":1608745549807,"results":"16","hashOfConfig":"10"},{"size":4632,"mtime":1608616378860,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"klvgq9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js",[],["37","38"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["39","40","41"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",["42","43"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./index.css\";\r\nimport logoIN from '../../assets/img/001-instagram.svg'\r\nimport logoFB from '../../assets/img/002-facebook.svg'\r\nimport logoPT from '../../assets/img/003-pinterest.svg'\r\n\r\n\r\nexport default function Footer() {\r\n    \r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n\r\n  const enviarEmail = () => {\r\n    return nome;\r\n  };\r\n\r\n  return (\r\n    <footer id=\"rodape\">\r\n      <div className=\"container\">\r\n        <div className=\"flex\">\r\n          <div className=\"textFooter\">\r\n            <p>Pix4Fun</p>\r\n            <p>IMPRESSÃO DE FOTOS NO FORMATO POLAROID</p>\r\n            <a href=\"mailto:CONTATO@PIX4FUN.COM.BR\">CONTATO@PIX4FUN.COM.BR</a>\r\n          </div>\r\n\r\n          <form method=\"post\" className=\"contato\">\r\n            <p>Entre em contato conosco</p>\r\n            <div className=\"field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={nome}\r\n                onChange={(event) => setNome(event.target.value)}\r\n                placeholder=\"Nome\"\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <textarea\r\n                rows=\"3\"\r\n                cols=\"35\"\r\n                name=\"nome\"\r\n                value={mensagem}\r\n                onChange={(event) => setMensagem(event.target.value)}\r\n                placeholder=\"Mensagem\"\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btnEnviar\">Enviar</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"pFooter\">\r\n          <p>©PIX4FUN Todos os direitos reservados. CNPJ 18.882.937/0001-01</p>\r\n          <p>SIGA-NOS EM NOSSAS REDES SOCIAIS PARA FICAR POR DENTRO DE TODAS AS\r\n            NOVIDADES!</p>\r\n        </div>\r\n\r\n        <div className=\"links\">\r\n            <a href=\"https://instagram.com/pix4funphoto\"><img src={logoIN} alt=\"Logo com link para o Instagram do pix4fun\"/></a>\r\n            <a href=\"https://www.facebook.com/pix4funphoto\"><img src={logoFB} alt=\"Logo com link para o Facebook do pix4fun\"/></a>\r\n            <a href=\"https://www.pinterest.com/\"><img src={logoPT} alt=\"Logo com link para o Pinterest do pix4fun\"/></a>\r\n        </div>\r\n\r\n        {\r\n          // Formulário com boostrap\r\n        }\r\n\r\n        {/* <Form onSubmit={event => enviarEmail(event)}>\r\n          <Form.Group controlId=\"formBasicContato\">\r\n          <Form.Control type=\"text\" placeholder=\"Nome\" value={nome} onChange={event => setNome(event.target.value)} />\r\n          <Form.Control type=\"text\" placeholder=\"Email\" value={email} onChange={event => setEmail(event.target.value)} />\r\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Mensagem\" value={mensagem} onChange={event => setMensagem(event.target.value)} />\r\n          </Form.Group>\r\n        </Form> */}\r\n      </div>\r\n    </footer>\r\n  );\r\n}","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["44","45","46","47","48","49","50","51","52","53"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { url } from '../../utils/constants'\r\nimport { Modal, Form } from 'react-bootstrap';\r\n\r\nimport './index.css';\r\n\r\n\r\nconst UploadImagem = () => {\r\n    const [state, setState] = useState('')\r\n    const [image, setImage] = React.useState(null)\r\n    const [fechar, setFechar] = React.useState(null)\r\n    const [frase, setFrase] = useState('')\r\n    const [croppedarea, setCroppedarea] = React.useState(null)\r\n    const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = React.useState(1)\r\n    const [contador, setContador] = useState(0);\r\n    const [desContador, setDescontador] = useState(18);\r\n    const [bloco2, setBloco2] = useState(null)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const SelectPopUp = () => inputCortar.current.click();\r\n\r\n    // Referencia o input no Botão Frase\r\n    const inputFrase = React.useRef();\r\n    const Frase = () => inputFrase.current.click();\r\n\r\n    //Componente que define a area do crop\r\n    const onCropComplete = (cropPorcentagem, cropPixels) => {\r\n        console.log(cropPorcentagem, cropPixels);\r\n        setCroppedarea(cropPixels)\r\n    }\r\n\r\n    //Seleciona imagem\r\n    const escolherImg = (event) => {\r\n        setState({\r\n            selectedFile: URL.createObjectURL(event.target.files[0])\r\n        })\r\n        console.log(event)\r\n    }\r\n\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = async e => {\r\n\r\n        const fd = new FormData();\r\n        fd.append('image', state.selectedFile)\r\n        fetch('http://localhost:5000/api/Foto', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // Componente que escolhe arquivo, e o corta \r\n    const AbrirCrop = (event) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(event.target.files[0])\r\n        reader.addEventListener(\"load\", () => {\r\n            setImage(reader.result)\r\n        })\r\n        console.log(event)\r\n    };\r\n\r\n    //Mostra a quantidade de imagens selecionadas\r\n    function AddContador() {\r\n        setContador(contador + 1)\r\n        setDescontador(desContador - 1)\r\n    }\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <Form onSubmit={event => ('')}></Form>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\">Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerTextOne\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerBtn\">\r\n                    <input\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={AbrirCrop}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={refbtnEscolher}\r\n                        href=\"#crop\"\r\n                    >Escolher</Button>\r\n                </div>\r\n            </div>\r\n            <hr id=\"crop\" />\r\n\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n\r\n            <div className=\"ContainerTwo\">\r\n                <div className=\"container-cropper\">\r\n                    {image ? (\r\n                        <>\r\n                            <div className='cropper'>\r\n                                {/* Define area a ser cortada */}\r\n                                <Cropper\r\n                                    image={image}\r\n                                    crop={crop}\r\n                                    zoom={zoom}\r\n                                    aspect={1}\r\n                                    onCropChange={setCrop}\r\n                                    onZoomChange={setZoom}\r\n                                    onCropComplete={onCropComplete}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='slider'>\r\n                                {/* Define o zoom */}\r\n                                <Slider\r\n                                    min={1}\r\n                                    max={3}\r\n                                    step={0.1}\r\n                                    value={zoom}\r\n                                    onChange={(e, zoom) => setZoom(zoom)}\r\n                                    color='secondary'\r\n                                />\r\n                            </div>\r\n                            {/* Botão para escolher outra imagem para realizar o crop */}\r\n                            <input\r\n                                type=\"file\"\r\n                                ref={inputEscolher}\r\n                                accept='image/*'\r\n                                onChange={AbrirCrop}\r\n                                style={{ display: 'none' }}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={refbtnEscolher}\r\n                            >Escolher outra imagem</Button>\r\n                            {/* Botão para subir imagem para a api */}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"BtnChoseFile\"\r\n                                onClick={uparImg}\r\n                                onClick={() => setImage(null)}\r\n                            >salvar</Button>\r\n                            {/* <h3>Você selecionou: {contador} imagens, ainda pode selecionar {desContador}</h3> */}\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <div className=\"blocos\">\r\n                        <div className=\"bloco1\">\r\n                            <div className=\"imagem\">\r\n                                <img src={state.selectedFile} />\r\n                            </div>\r\n                            <div className=\"container-buttons\">\r\n\r\n                                <Button variant=\"contained\">Excluir</Button>\r\n\r\n                                <input\r\n                                    type=\"file\"\r\n                                    ref={inputCortar}\r\n                                    accept='image/*'\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={AbrirCrop}\r\n                                    onClick={AddContador}\r\n                                />\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={SelectPopUp}\r\n                                >Cortar</Button>\r\n\r\n\r\n\r\n                                <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                                    Frase\r\n                            </Button>\r\n\r\n                                <ModalFrase\r\n                                    show={modalShow}\r\n                                    onHide={() => setModalShow(false)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {bloco2 ? (\r\n                            <>\r\n                                <div className=\"bloco2\">\r\n                                    <div className=\"imagem\">\r\n                                        <img src={state.selectedFile} />\r\n                                    </div>\r\n                                    <div className=\"container-buttons\">\r\n                                        <Button variant=\"contained\">Excluir</Button>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            ref={inputCortar}\r\n                                            accept='image/*'\r\n                                            style={{ display: 'none' }}\r\n                                            onChange={AbrirCrop}\r\n                                            onClick={AddContador}\r\n                                        />\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            onClick={SelectPopUp}\r\n                                        >Cortar</Button>\r\n                                        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                                            Frase\r\n                            </Button>\r\n                                        <ModalFrase\r\n                                            show={modalShow}\r\n                                            onHide={() => setModalShow(false)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </>\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"btnAbrir\">\r\n                        <input\r\n                            type=\"file\"\r\n                            ref={inputEscolher}\r\n                            accept='image/*'\r\n                            onChange={AbrirCrop}\r\n                            onClick={() => setBloco2(true)}\r\n                            style={{ display: 'none' }}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={refbtnEscolher}\r\n                        >Escolher outra imagem</Button>\r\n                    </div>\r\n\r\n                    <hr />\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <Footer id=\"rodape\" />\r\n        </div>\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["54"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":4,"column":27,"nodeType":"64","messageId":"65","endLine":4,"endColumn":33},{"ruleId":"62","severity":1,"message":"66","line":4,"column":41,"nodeType":"64","messageId":"65","endLine":4,"endColumn":47},{"ruleId":"62","severity":1,"message":"67","line":4,"column":49,"nodeType":"64","messageId":"65","endLine":4,"endColumn":54},{"ruleId":"62","severity":1,"message":"68","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"62","severity":1,"message":"69","line":15,"column":9,"nodeType":"64","messageId":"65","endLine":15,"endColumn":20},{"ruleId":"62","severity":1,"message":"70","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"71","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":13},{"ruleId":"62","severity":1,"message":"72","line":16,"column":12,"nodeType":"64","messageId":"65","endLine":16,"endColumn":18},{"ruleId":"62","severity":1,"message":"73","line":16,"column":20,"nodeType":"64","messageId":"65","endLine":16,"endColumn":29},{"ruleId":"62","severity":1,"message":"74","line":18,"column":12,"nodeType":"64","messageId":"65","endLine":18,"endColumn":23},{"ruleId":"62","severity":1,"message":"75","line":35,"column":11,"nodeType":"64","messageId":"65","endLine":35,"endColumn":16},{"ruleId":"62","severity":1,"message":"76","line":44,"column":11,"nodeType":"64","messageId":"65","endLine":44,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":189,"column":33,"nodeType":"79","endLine":189,"endColumn":63},{"ruleId":"80","severity":1,"message":"81","line":198,"column":33,"nodeType":"82","endLine":198,"endColumn":65},{"ruleId":"80","severity":1,"message":"81","line":235,"column":41,"nodeType":"82","endLine":235,"endColumn":73},{"ruleId":"62","severity":1,"message":"83","line":82,"column":13,"nodeType":"64","messageId":"65","endLine":82,"endColumn":20},{"ruleId":"62","severity":1,"message":"84","line":10,"column":19,"nodeType":"64","messageId":"65","endLine":10,"endColumn":27},{"ruleId":"62","severity":1,"message":"85","line":14,"column":23,"nodeType":"64","messageId":"65","endLine":14,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":156,"column":21,"nodeType":"79","endLine":156,"endColumn":47},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Form' is defined but never used.","'enviarEmail' is assigned a value but never used.","'useEffect' is defined but never used.","'url' is defined but never used.","'fechar' is assigned a value but never used.","'setFechar' is assigned a value but never used.","'croppedarea' is assigned a value but never used.","'Frase' is assigned a value but never used.","'escolherImg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'usuario' is assigned a value but never used.","'setCupom' is assigned a value but never used.","'setPrecopack' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]