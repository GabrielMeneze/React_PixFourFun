[{"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"1","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js":"2","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"3","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx":"4","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js":"5","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"6","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"7","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"8"},{"size":11680,"mtime":1612964692156,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611800954659,"results":"11","hashOfConfig":"10"},{"size":2043,"mtime":1612920236770,"results":"12","hashOfConfig":"10"},{"size":7015,"mtime":1612963833083,"results":"13","hashOfConfig":"10"},{"size":944,"mtime":1611927916968,"results":"14","hashOfConfig":"10"},{"size":9535,"mtime":1612964516303,"results":"15","hashOfConfig":"10"},{"size":2750,"mtime":1612963740873,"results":"16","hashOfConfig":"10"},{"size":6995,"mtime":1612840160301,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"klvgq9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53"],"// Fechar o crop como você fecha o input da frase\r\n\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport './index.css';\r\nimport { event, get } from 'jquery';\r\n\r\nconst UploadImagem = () => {\r\n    const [imagens, setImagens] = useState([])\r\n    const [limitador, setLimitador] = useState(0)\r\n    const [des, setDes] = useState(-1)\r\n    const [li, setLi] = useState('oi')\r\n    const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = React.useState(1)\r\n    const [container2, setContainer2] = React.useState(null)\r\n    const [croppedarea, setCroppedarea] = React.useState(null)\r\n    const [qtdImgs, setQntdItens] = React.useState(localStorage.getItem(\"produtoinCart\"))\r\n\r\n    const keys = qtdImgs.split(' ')\r\n\r\n    // Variaveis referentes aos botões\r\n    const [frase, setFrase] = useState('')\r\n    const [image, setImage] = React.useState(null)\r\n\r\n    //variaveis do modal\r\n    const [modalShow, setModalShow] = React.useState(false)\r\n    const [modalcrop, setModalcrop] = React.useState(false)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const refCortar = () => inputCortar.current.click();\r\n\r\n    //Componente que define a area do crop\r\n    const onCropComplete = (cropPorcentagem, cropPixels) => {\r\n        setCroppedarea(cropPixels)\r\n        console.log(cropPorcentagem, croppedarea)\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparFrase = () => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:3000/api/Foto/FraseFoto', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // componente que escolhe a imagem\r\n    const escolherImg = event => {\r\n\r\n        var pack6 = 5;\r\n        var pack12 = 11;\r\n        var pack18 = 17;\r\n\r\n        console.log(keys)\r\n        // Verificação para limitar quantidade de fotos escolhidas\r\n        if (limitador == 0 && li == 'oi') {\r\n            // seleciona a foto\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n            console.log(imagens)\r\n            if (keys[6] == 6) {\r\n                setLimitador(limitador + pack6)\r\n            }\r\n            else if (keys[6] == 12) {\r\n                setLimitador(limitador + pack12);\r\n            }\r\n            else if (keys[6] == 18) {\r\n                setLimitador(limitador + pack18);\r\n            }\r\n        } else if (li == 'oi') {\r\n            imagens.push(URL.createObjectURL(event.target.files[0]))\r\n\r\n            setLimitador(limitador + des)\r\n\r\n            if (limitador == 1) {\r\n                alert('Pronto! agora basta enviar as fotos')\r\n                setLi('hoje');\r\n            }\r\n        } else if (li == 'hoje') {\r\n            alert('voce não pode mais selecionar imagens')\r\n        }\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = (event) => {\r\n        if (limitador > 0) {\r\n            alert('você ainda pode selecionar mais fotos')\r\n        } else {\r\n            const fd = new FormData();\r\n            fd.append('image', imagens)\r\n            fetch('http://localhost:5000/api/Foto', fd)\r\n                .then(res => {\r\n                    console.log(res)\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    function excluirImg(target, index) {\r\n        var i = 1\r\n        const list = Array.from(imagens)\r\n        list.splice(index, 1);\r\n\r\n        setImagens(list);\r\n        setLi('oi')\r\n        setLimitador(limitador + i);\r\n    }\r\n\r\n\r\n    // Componente que escolhe a imagem e o corta \r\n    // const AbrirCrop = (event, props) => {\r\n\r\n    //     const reader = new FileReader();\r\n\r\n    //     if (event.target.files[0]) {\r\n    //         reader.readAsDataURL(event.target.files[0])\r\n    //         reader.addEventListener(\"load\", () => {\r\n    //             setImage(reader.result)\r\n    //         })\r\n    //     }\r\n    // };\r\n\r\n        \r\n    function ModalCrop(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Recorte a imagem\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        <div className=\"container-cropper\" >\r\n                        <div className='cropper'>\r\n                            <Cropper\r\n                                imagens={imagens}\r\n                                crop={crop}\r\n                                zoom={zoom}\r\n                                aspect={1}\r\n                                onCropChange={setCrop}\r\n                                onZoomChange={setZoom}\r\n                                onCropComplete={onCropComplete}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='slider'>\r\n                            <Slider\r\n                                min={1}\r\n                                max={6}\r\n                                step={0.1}\r\n                                value={zoom}\r\n                                onChange={(e, zoom) => setZoom(zoom)}\r\n                                color='secondary'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    // Define frase que acompanhará foto\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\" onClick={uparFrase}>Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerA_Text\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerB_escolher\">\r\n                    <input\r\n                        href=\"#ContainerT\"\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={escolherImg}\r\n                        onClick={() => setContainer2(true)}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <button\r\n                        className=\"Btn\"\r\n                        onClick={refbtnEscolher}\r\n                    >Escolher imagem</button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"lin\" id=\"ContainerT\" />\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n            {container2 ? (\r\n                        <>\r\n            <div className=\"ContainerTwo\">\r\n\r\n                <div className=\"container_bloco\">\r\n                    {imagens.map(item => {\r\n                        return (\r\n                            <div className=\"bloco-imagem\">\r\n                                <div className=\"imagem\">\r\n                                    {/* lista a imagem no bloco */}\r\n                                    <img src={item} />\r\n                                </div>\r\n                                <div className=\"container-buttons\">\r\n                                    {/* botão excluir */}\r\n                                    <Button onClick={() => excluirImg(item.id)} >Excluir</Button>\r\n\r\n                                    {/* Abre o cortar imagem */}\r\n                                    <Button\r\n                                        onClick={() => setModalcrop(true)}\r\n                                    >Cortar</Button>\r\n                                    <ModalCrop\r\n                                        show={modalcrop}\r\n                                        onHide={() => setModalcrop(false)}\r\n                                    />\r\n                                    {/* Abre o input para a frase da foto */}\r\n                                    <Button\r\n                                        onClick={() => setModalShow(true)}>\r\n                                        Frase\r\n                                    </Button>\r\n                                    <ModalFrase\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"man\">\r\n                    <div className=\"container-subimit\">\r\n                        {<p>Você ainda pode escolher {limitador} imagens</p>}\r\n                        <div className=\"escolherdnv\">\r\n                            <button\r\n                                className=\"Btn\"\r\n                                onClick={refbtnEscolher}\r\n                            >ESCOLHER OUTRA IMAGEM</button>\r\n                                <Link to=\"/Carrinho\" className=\"Btn\"\r\n                                onClick={uparImg} >SALVAR E ENVIAR</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n                    ) : null}\r\n\r\n            <div id=\"contact\" />\r\n            <div id=\"doubt\" />\r\n            <Footer />\r\n        </div >\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx",["54","55","56"],"import React, { useState } from 'react';\r\nimport Header from '../../components/Header'\r\nimport './index.css';\r\nimport Footer from '../../components/Footer';\r\n\r\n\r\nconst Carrinho = () => {\r\n\r\n    const [listarImgs, setListarImgs] = React.useState(localStorage.getItem(\"produtoinCart\"));\r\n    const [custoTotal, setCustoTotal] = useState(0)\r\n    const [cartNumber, setCartNumber] = React.useState(localStorage.getItem(\"cartNumber\"))\r\n    const [fretePreco, setFrete] = React.useState(localStorage.getItem(\"frete\"))\r\n\r\n    function Validar(event) {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const data = Object.fromEntries(formData);\r\n\r\n        if (data.Cupom) {\r\n            if (data.Cupom === 'PIX10') {\r\n                let desconto = (custo * 0.9);\r\n                if (frete) {\r\n                    console.log('e')\r\n                    setCustoTotal(descontoEcusto.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }));\r\n                }else{\r\n                    console.log('s')\r\n                    setCustoTotal(desconto.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }));\r\n                }\r\n                console.log('novo valor com 10% de desconto: ', desconto)\r\n            } else {\r\n                console.log('cupom não é valido')\r\n            }\r\n        } else {\r\n            console.log('é necessario preencher o campo')\r\n        }\r\n    }\r\n\r\n    function calcularHandler(event) {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const data = Object.fromEntries(formData);\r\n        fetch('http://localhost:3002/?calcular=' + data.calcular)\r\n            .then(response => response.json())\r\n            .then(r => {\r\n                return (\r\n                    console.log(r),\r\n                    localStorage.setItem('frete', r.result[1].Valor)\r\n                )\r\n            })\r\n            .catch(console.error)\r\n\r\n            if (frete) {\r\n                setCustoTotal(custoTotal + custoeFrete)\r\n            }\r\n\r\n    }\r\n\r\n    var separadores = ['\"', ':', ',', '}']\r\n    const keys = listarImgs.split(new RegExp('(' + separadores.join('|') + ')'))\r\n\r\n    let custo = parseFloat(keys[24])\r\n    let frete = parseFloat(fretePreco)\r\n    let custoeFrete = (custo + frete)\r\n    let desconto = (custo * 0.9)\r\n    let descontoEcusto = (desconto + frete)\r\n\r\n    // const custoTot = () => (\r\n    //     setCustoTotal(custoeFrete.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }))\r\n    // )\r\n\r\n    //setCustoTotal(custo + frete)\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"mai\">\r\n            <Header />\r\n            <div className=\"produto-detalhes\">\r\n                <div className=\"con\">\r\n                    <div className=\"produto-h\">\r\n                        <h5 className=\"titulo\">produto</h5>\r\n                        <h5 className=\"preco\">preço</h5>\r\n                        <h5 className=\"quantidade\">quantidade</h5>\r\n                        <h5 className=\"total\">total</h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"con\">\r\n                    <div className=\"produto-carrinho\">\r\n                        {<p className=\"pack-nome\" >{keys[14]}</p>}\r\n                        {<p className=\"preco-b\">{keys[24]}</p>}\r\n                        {<p className=\"quantidade-b\">{cartNumber}</p>}\r\n                        {<p className=\"custo\">{keys[24]}</p>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"container-resumo\">\r\n                <div className=\"resumo-pedido\">\r\n                    <div className=\"limit-div\">\r\n                        <h5>Resumo pedido</h5>\r\n                        <div className=\"resumo-detalhes\">\r\n                            {<p>{cartNumber} produto(s)</p>}\r\n                            {<p>R${keys[24]}</p>}\r\n                        </div>\r\n                        <div className=\"resumo-detalhes\">\r\n                            {<p>frete</p>}\r\n                            {<p>R${fretePreco}</p>}\r\n                        </div>\r\n                        <div className=\"resumo-detalhes\">\r\n                            <form className=\"form-cupom\" onSubmit={Validar}>\r\n                                <div className=\"form-cupom\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"Cupom\"\r\n                                        className=\"input-cupom\"\r\n                                    >\r\n                                    </input>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        value=\"vcupom\"\r\n                                    >OK</button>\r\n                                </div>\r\n                            </form>\r\n                            <form onSubmit={calcularHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"calcular\"\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                    </input>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        value=\"Calcular\"\r\n                                    >Calcular</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <hr />\r\n\r\n                        <div className=\"resumo-detalhes\">\r\n                            <strong>total</strong>\r\n                            <strong>{custoTotal}</strong>\r\n                        </div>\r\n                        <div className=\"buy-area\">\r\n                            <button className=\"buy-button\">\r\n                                COMPRAR\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* <form onSubmit={pagamentoHandler}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"pago\"\r\n                            className=\"form-control\"\r\n                        >\r\n                        </input>\r\n                        <button\r\n                            type=\"submit\"\r\n                            value=\"Pago\"\r\n                        >mercado</button>\r\n                    </div>\r\n                </form> */}\r\n            <script\r\n                src=\"https://www.mercadopago.com.ar/integrations/v1/web-payment-checkout.js\"\r\n                data-preference-id='<%= global.id %>'>\r\n            </script>\r\n            <Footer />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Carrinho;\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["57","58"],"import React, { useState } from \"react\";\r\nimport Header from \"../../components/Header/index\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nexport default function Home() {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // array que da valor aos botões comprar\r\n  let produtos = [\r\n    {\r\n      name: 'Pack com 6 fotos polaroid',\r\n      price: 17.99,\r\n      qtd: 6,\r\n      inCart: 0\r\n    },\r\n    {\r\n      name: 'Pack com 12 fotos polaroid',\r\n      price: 21.99,\r\n      qtd: 6,\r\n      inCart: 0\r\n    },\r\n    {\r\n      name: 'Pack com 18 fotos polaroid',\r\n      price: 26.99,\r\n      qtd: 6,\r\n      inCart: 0\r\n    }\r\n  ]\r\n\r\n  // Botões que direcionam para pagina de login ou upload\r\n  function botaoComprar() {\r\n    if (token === null) {\r\n      return (\r\n        <Link \r\n         onClick={(i) => {\r\n          cartsnumber(produtos[i]);\r\n          custoTotal(produtos[i]);\r\n         }} \r\n        id=\"bota\" to=\"/LoginCadastro\" className=\"buyButton\" >\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n         <Link \r\n        onClick={(i) => {\r\n          cartsnumber(produtos[i]);\r\n          custoTotal(produtos[i]);\r\n        }} \r\n        id=\"bota\" to=\"/uploadimagem\" className=\"buyButton\">\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  function cartsnumber() {\r\n    let productnumber = localStorage.getItem('cartNumber');\r\n\r\n    productnumber = parseInt(productnumber);\r\n\r\n    if (productnumber) {\r\n      localStorage.setItem('cartNumber', productnumber + 1);\r\n    } else {\r\n      localStorage.setItem('cartNumber', 1);\r\n    }\r\n    setItems(produtos)\r\n  }\r\n\r\n  //  cria um array com os produtos selecionados: para ver os mesmos é necessario ir a application no console e selecionar um produto\r\n  function setItems() {\r\n    let cartItems = localStorage.getItem('produtoinCart');\r\n    cartItems = JSON.parse(cartItems)\r\n\r\n    if (cartItems != null) {\r\n      if (cartItems[produtos.name] === undefined) {\r\n        cartItems = {\r\n          ...cartItems,\r\n          [produtos.name]: produtos\r\n        }\r\n      }\r\n      cartItems[produtos.name].inCart += 1;\r\n    } else {\r\n      produtos.inCart = 1;\r\n      cartItems = {\r\n        [produtos.name]: produtos\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('produtoinCart', JSON.stringify(cartItems))\r\n  }\r\n\r\n  // Calcula o preço total\r\n  function custoTotal() {\r\n\r\n    let custo = localStorage.getItem('custoTotal');\r\n    console.log(typeof custo);\r\n\r\n    if (custo != null) {\r\n      custo = parseInt(custo);\r\n      localStorage.setItem('custoTotal', custo + produtos.price);\r\n    } else {\r\n      localStorage.setItem('custoTotal', produtos.price);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"mainBanner\">\r\n        <h1>IMPRIMA SUAS MEMÓRIAS COM ESTILO</h1>\r\n        <a href=\"#summary\" className=\"btnMainBanner\">\r\n          CONHEÇA\r\n        </a>\r\n      </div>\r\n      <div className=\"container\">\r\n        <section id=\"summary\">\r\n          <h2>VEJA COMO É FÁCIL</h2>\r\n          <div className=\"summaryCards\">\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary\">1</p>\r\n              <div>\r\n                <h3>ESCOLHA SEU PACK</h3>\r\n                <p>Temos packs com 6, 12 e 18 fotos.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary2\">2</p>\r\n              <div>\r\n                <h3>ENVIE SUAS FOTOS</h3>\r\n                <p>\r\n                  Cliquem em comprar no pack escolhido, escolha suas fotos,\r\n                  edite-as e nos envie.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary3\">3</p>\r\n              <div>\r\n                <h3>PRONTO</h3>\r\n                <p>\r\n                  Finalize com o pagamento, endereço de envio e pronto; agora é\r\n                  só aguardar suas fotos chegarem na sua casa.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section id=\"buy\">\r\n          <h2>VAMOS EXPERIMENTAR?</h2>\r\n          <div className=\"packs\">\r\n            <div className=\"pack1\">\r\n              <h3>PACK COM 6</h3>\r\n              <div className=\"limitImg\">\r\n                <div className=\"imgPack1\" />\r\n              </div>\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 17,99</h4>\r\n              </div>\r\n              <div className=\"buy buy1\">\r\n                {botaoComprar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"pack2\">\r\n              <h3>PACK COM 12</h3>\r\n              <div className=\"limitImg\">\r\n                <div className=\"imgPack2\" />\r\n              </div>\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 21,99</h4>\r\n              </div>\r\n              <div className=\"buy buy2\">\r\n                {botaoComprar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"pack3\">\r\n              <h3>PACK COM 18</h3>\r\n              <div className=\"limitImg\">\r\n                <div className=\"imgPack3\" />\r\n              </div>\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 26,99</h4>\r\n              </div>\r\n              <div className=\"buy buy3\">\r\n                {botaoComprar()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section id=\"faq\">\r\n          <h2>F.A.Q</h2>\r\n          <div className=\"pergunta\">\r\n            <h4>Em que material serão reveladas as minhas fotos?</h4>\r\n            <p>\r\n              Suas fotos serão reveladas em papel fotográfico Kodak® em\r\n              laboratório fotográfico profissional.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>QUAIS as formas DE PAGAMENTO?</h4>\r\n            <p>\r\n              Trabalhamos com a plataforma de pagamentos do Pagseguro, portanto\r\n              aceitamos cartões e boleto.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>COMO Serão Enviadas as minhas fotos?</h4>\r\n            <p>\r\n              Suas fotos serão enviadas por carta registrada através do Correios\r\n              em uma embalagem PIX4FUN personalizada com frete fixo de R$10,00.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>EM QUANTO TEMPO RECEBEREI MINHAS FOTOS?</h4>\r\n            <p>\r\n              Após confirmado o pagamento, pedimos um prazo de 3 dias para a\r\n              produção. Logo após passa a vigorar o prazo de entrega de carta\r\n              registrada dos Correios, que leva de 3 a 14 dias úteis dependendo\r\n              da região.\r\n            </p>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <div>\r\n        <div id=\"contact\" />\r\n        <div id=\"doubt\" />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",["59"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["60"],{"ruleId":"61","severity":1,"message":"62","line":10,"column":27,"nodeType":"63","messageId":"64","endLine":10,"endColumn":33},{"ruleId":"61","severity":1,"message":"65","line":12,"column":10,"nodeType":"63","messageId":"64","endLine":12,"endColumn":15},{"ruleId":"61","severity":1,"message":"66","line":12,"column":17,"nodeType":"63","messageId":"64","endLine":12,"endColumn":20},{"ruleId":"61","severity":1,"message":"67","line":17,"column":17,"nodeType":"63","messageId":"64","endLine":17,"endColumn":23},{"ruleId":"61","severity":1,"message":"68","line":23,"column":21,"nodeType":"63","messageId":"64","endLine":23,"endColumn":33},{"ruleId":"61","severity":1,"message":"69","line":29,"column":12,"nodeType":"63","messageId":"64","endLine":29,"endColumn":17},{"ruleId":"61","severity":1,"message":"70","line":29,"column":19,"nodeType":"63","messageId":"64","endLine":29,"endColumn":27},{"ruleId":"61","severity":1,"message":"71","line":41,"column":11,"nodeType":"63","messageId":"64","endLine":41,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":68,"column":23,"nodeType":"74","messageId":"75","endLine":68,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":68,"column":34,"nodeType":"74","messageId":"75","endLine":68,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":72,"column":25,"nodeType":"74","messageId":"75","endLine":72,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":75,"column":30,"nodeType":"74","messageId":"75","endLine":75,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":78,"column":30,"nodeType":"74","messageId":"75","endLine":78,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":81,"column":23,"nodeType":"74","messageId":"75","endLine":81,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":86,"column":27,"nodeType":"74","messageId":"75","endLine":86,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":90,"column":23,"nodeType":"74","messageId":"75","endLine":90,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":256,"column":37,"nodeType":"78","endLine":256,"endColumn":55},{"ruleId":"61","severity":1,"message":"79","line":9,"column":24,"nodeType":"63","messageId":"64","endLine":9,"endColumn":37},{"ruleId":"61","severity":1,"message":"80","line":11,"column":24,"nodeType":"63","messageId":"64","endLine":11,"endColumn":37},{"ruleId":"61","severity":1,"message":"81","line":12,"column":24,"nodeType":"63","messageId":"64","endLine":12,"endColumn":32},{"ruleId":"61","severity":1,"message":"82","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":4,"column":27,"nodeType":"63","messageId":"64","endLine":4,"endColumn":33},{"ruleId":"61","severity":1,"message":"82","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"83","line":82,"column":13,"nodeType":"63","messageId":"64","endLine":82,"endColumn":20},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'event' is defined but never used.","'get' is defined but never used.","'setDes' is assigned a value but never used.","'setQntdItens' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'refCortar' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setListarImgs' is assigned a value but never used.","'setCartNumber' is assigned a value but never used.","'setFrete' is assigned a value but never used.","'useState' is defined but never used.","'usuario' is assigned a value but never used."]