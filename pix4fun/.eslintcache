[{"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js":"1","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"2","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"3","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"4","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx":"5","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx":"6","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"7","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"8","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\cropimage.js":"9","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js":"10","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx":"11","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js":"12","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\MaEvents\\main.js":"13"},{"size":952,"mtime":1610657200370,"results":"14","hashOfConfig":"15"},{"size":10408,"mtime":1610994066620,"results":"16","hashOfConfig":"15"},{"size":3253,"mtime":1610146852064,"results":"17","hashOfConfig":"15"},{"size":9524,"mtime":1610995205553,"results":"18","hashOfConfig":"15"},{"size":3853,"mtime":1609887779942,"results":"19","hashOfConfig":"15"},{"size":47,"mtime":1609897564452,"results":"20","hashOfConfig":"15"},{"size":6971,"mtime":1610657200376,"results":"21","hashOfConfig":"15"},{"size":2878,"mtime":1610657200378,"results":"22","hashOfConfig":"15"},{"size":2669,"mtime":1608177721076,"results":"23","hashOfConfig":"15"},{"size":375,"mtime":1610657200381,"results":"24","hashOfConfig":"15"},{"size":1244,"mtime":1610823211096,"results":"25","hashOfConfig":"15"},{"size":697,"mtime":1610657200368,"results":"26","hashOfConfig":"15"},{"size":2974,"mtime":1610147837578,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"klvgq9",{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["56","57","58"],"import React, { useState } from \"react\";\r\nimport Header from \"../../components/Header/index\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nexport default function Home() {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // array que da valor aos botões comprar\r\n  let produtos = [\r\n    {\r\n      name: 'Pack com 6 fotos polaroid',\r\n      price: 17.99,\r\n      qtd: 6,\r\n      inCart: 0,\r\n      frete: 10\r\n    },\r\n    {\r\n      name: 'Pack com 12 fotos polaroid',\r\n      price: 21.99,\r\n      qtd: 6,\r\n      inCart: 0,\r\n      frete: 10\r\n    },\r\n    {\r\n      name: 'Pack com 18 fotos polaroid',\r\n      price: 26.99,\r\n      qtd: 6,\r\n      inCart: 0,\r\n      frete: 10\r\n    }\r\n  ]\r\n\r\n  // Botões que direcionam para pagina de login ou upload\r\n  const botaoComprar = () => {\r\n    if (token === null) {\r\n      return (\r\n        <Link id=\"bota\" to=\"/LoginCadastro\" className=\"buyButton\" >\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link id=\"bota\" to=\"/uploadimagem\" className=\"buyButton\">\r\n          COMPRAR\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  //  Variavel que pega o class do botão\r\n  let carts = document.querySelectorAll('.buyButton');\r\n\r\n  // Laço de repetição\r\n  for (let i = 0; i < carts.length; i++) {\r\n      carts[i].addEventListener('click', () => {\r\n          cartsnumber(produtos[i]);\r\n          custoTotal(produtos[i]);\r\n      })\r\n  }\r\n  \r\n  function cartsnumber(produto) {\r\n      let productnumber = localStorage.getItem('cartNumber');\r\n  \r\n      productnumber = parseInt(productnumber);\r\n  \r\n      if (productnumber) {\r\n          localStorage.setItem('cartNumber', productnumber + 1);\r\n      } else {\r\n          localStorage.setItem('cartNumber', 1);\r\n      }\r\n  \r\n      setItems(produto);\r\n  }\r\n  \r\n  //  cria um array co os produtos selecionados: para ver os mesmos é necessario ir a application no console e selecionar um produto\r\n  function setItems(produto) {\r\n      let cartItems = localStorage.getItem('produtoinCart');\r\n      cartItems = JSON.parse(cartItems)\r\n  \r\n      if (cartItems != null) {\r\n          if (cartItems[produto.name] === undefined) {\r\n              cartItems = {\r\n                  ...cartItems,\r\n                  [produto.name]: produto\r\n              }\r\n          }\r\n          cartItems[produto.name].inCart += 1;\r\n      } else {\r\n          produto.inCart = 1;\r\n          cartItems = {\r\n              [produto.name]: produto\r\n          }\r\n      }\r\n  \r\n      localStorage.setItem('produtoinCart', JSON.stringify(cartItems))\r\n  }\r\n\r\n  // Calcula o preço total\r\n  function custoTotal(produto) {\r\n\r\n    let custo = localStorage.getItem('custoTotal');\r\n    console.log(typeof custo);\r\n\r\n    if (custo != null) {\r\n        custo = parseInt(custo);\r\n        localStorage.setItem('custoTotal', custo + produto.price);\r\n    } else {\r\n        localStorage.setItem('custoTotal', produto.price);\r\n    }\r\n}\r\n\r\n// Lista o item no carrinho(não ta funfando pq n pega o produtos no queryselector)\r\nfunction displayCart() {\r\n  let cartItems = localStorage.getItem(\"produtoinCart\");\r\n  cartItems = JSON.parse(cartItems);\r\n  let container = document.querySelector(\".produtos\");\r\n  console.log(cartItems);\r\n  if (cartItems && container) {\r\n      container.innerHTML = '';\r\n      Object.values(cartItems).map(item => {\r\n          container.innerHTML += `\r\n              <div class=\"produto\" >\r\n              <span>${item.name}</span>\r\n              </div>\r\n              <div class=\"preco\"> ${item.price}</div>\r\n              <div class=\"quantidade\"> ${item.inCart}</div>\r\n              <div class=\"total\">${item.price + item.frete}</div>\r\n          \r\n          `\r\n      })\r\n  }\r\n}\r\n\r\ndisplayCart();\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"mainBanner\">\r\n        <h1>IMPRIMA SUAS MEMÓRIAS COM ESTILO</h1>\r\n        <a href=\"#summary\" className=\"btnMainBanner\">\r\n          CONHEÇA\r\n        </a>\r\n      </div>\r\n      <div className=\"container\">\r\n        <section id=\"summary\">\r\n          <h2>VEJA COMO É FÁCIL</h2>\r\n          <div className=\"summaryCards\">\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary\">1</p>\r\n              <div>\r\n                <h3>ESCOLHA SEU PACK</h3>\r\n                <p>Temos packs com 6, 12 e 18 fotos.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary2\">2</p>\r\n              <div>\r\n                <h3>ENVIE SUAS FOTOS</h3>\r\n                <p>\r\n                  Cliquem em comprar no pack escolhido, escolha suas fotos,\r\n                  edite-as e nos envie.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"textSummary\">\r\n              <p className=\"imgTextSummary3\">3</p>\r\n              <div>\r\n                <h3>PRONTO</h3>\r\n                <p>\r\n                  Finalize com o pagamento, endereço de envio e pronto; agora é\r\n                  só aguardar suas fotos chegarem na sua casa.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section id=\"buy\">\r\n          <h2>VAMOS EXPERIMENTAR?</h2>\r\n          <div className=\"packs\">\r\n            <div className=\"pack1\">\r\n              <h3>PACK COM 6</h3>\r\n              <div className=\"imgPack1\" />\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 17,99</h4>\r\n              </div>\r\n              <div className=\"buy buy1\">\r\n                {botaoComprar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"pack2\">\r\n              <h3>PACK COM 12</h3>\r\n              <div className=\"imgPack2\" />\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 21,99</h4>\r\n              </div>\r\n              <div className=\"buy buy2\">\r\n                {botaoComprar()}\r\n              </div>\r\n            </div>\r\n            <div className=\"pack3\">\r\n              <h3>PACK COM 18</h3>\r\n              <div className=\"imgPack3\" />\r\n              <div className=\"packDesc\">\r\n                <p>\r\n                  <span>•TAMANHOS</span>\r\n                </p>\r\n                <p>Quadrado: 9cm x 11cm</p>\r\n                <p>paisagem: 11cm x 9cm</p>\r\n                <p>\r\n                  retrato: 7,5cm x 12cm\r\n                  <br />\r\n                  <br />\r\n                </p>\r\n                <span>\r\n                  <p>•Fotos no formato</p>\r\n                  <p>\r\n                    Polaroid®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Papel fotográfico</p>\r\n                  <p>\r\n                    Kodak®\r\n                    <br />\r\n                    <br />\r\n                  </p>\r\n                  <p>•Frete FIXO R$10,00</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"precoPack\">\r\n                <h4>R$ 26,99</h4>\r\n              </div>\r\n              <div className=\"buy buy3\">\r\n                {botaoComprar()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section id=\"faq\">\r\n          <h2>F.A.Q</h2>\r\n          <div className=\"pergunta\">\r\n            <h4>Em que material serão reveladas as minhas fotos?</h4>\r\n            <p>\r\n              Suas fotos serão reveladas em papel fotográfico Kodak® em\r\n              laboratório fotográfico profissional.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>QUAIS as formas DE PAGAMENTO?</h4>\r\n            <p>\r\n              Trabalhamos com a plataforma de pagamentos do Pagseguro, portanto\r\n              aceitamos cartões e boleto.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>COMO Serão Enviadas as minhas fotos?</h4>\r\n            <p>\r\n              Suas fotos serão enviadas por carta registrada através do Correios\r\n              em uma embalagem PIX4FUN personalizada com frete fixo de R$10,00.\r\n            </p>\r\n          </div>\r\n          <div className=\"pergunta\">\r\n            <h4>EM QUANTO TEMPO RECEBEREI MINHAS FOTOS?</h4>\r\n            <p>\r\n              Após confirmado o pagamento, pedimos um prazo de 3 dias para a\r\n              produção. Logo após passa a vigorar o prazo de entrega de carta\r\n              registrada dos Correios, que leva de 3 a 14 dias úteis dependendo\r\n              da região.\r\n            </p>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <div>\r\n        <div id=\"contact\" />\r\n        <div id=\"doubt\" />\r\n\r\n        <script src=\"main.js\"></script>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["59","60"],"// Fechar o crop como você fecha o input da frase\r\n\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Modal } from 'react-bootstrap';\r\nimport './index.css';\r\n\r\nconst UploadImagem = () => {\r\n\r\n    const [state, setState] = useState('')\r\n    const [contador, setContador] = useState(6)\r\n    const [des, setDes] = useState(-1)\r\n    const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = React.useState(1)\r\n    const [image, setImage] = React.useState(null)\r\n    const [bloco1, setBloco1] = React.useState(null)\r\n    const [croppedarea, setCroppedarea] = React.useState(null)\r\n\r\n\r\n    // Variaveis referentes aos botões\r\n    const [frase, setFrase] = useState('')\r\n    const [modalShow, setModalShow] = React.useState(false)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const refCortar = () => inputCortar.current.click();\r\n\r\n    //Componente que define a area do crop\r\n    const onCropComplete = (cropPorcentagem, cropPixels) => {\r\n        setCroppedarea(cropPixels)\r\n        console.log(cropPorcentagem, croppedarea)\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparFrase = () => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:3000/api/Foto/FraseFoto', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // componente que escolhe a imagem\r\n    const escolherImg = event => {\r\n        setState({\r\n            selectedFile: URL.createObjectURL(event.target.files[0])\r\n        })\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = (event) => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:3000/api/Upload', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n\r\n    // Componente que escolhe a imagem e o corta \r\n    const AbrirCrop = (event, props) => {\r\n        const reader = new FileReader();\r\n\r\n        if (event.target.files[0]) {\r\n            reader.readAsDataURL(event.target.files[0])\r\n            reader.addEventListener(\"load\", () => {\r\n                setImage(reader.result)\r\n            })\r\n        }\r\n    };\r\n\r\n    const Qtd = () =>{\r\n        if (contador === 0) {\r\n            <p>Você não pode mais selecionar imagens</p>\r\n        }else{\r\n            setContador(contador + des);\r\n        }\r\n    }\r\n\r\n    // Define frase que acompanhará foto\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\" onClick={uparFrase}>Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerA_Text\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerB_escolher\">\r\n                    <input\r\n                        href=\"#ContainerT\"\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={escolherImg}\r\n                        onClick={() => setBloco1(true)}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <button\r\n                        className=\"Btn\"\r\n                        onClick={refbtnEscolher}\r\n                    >Escolher imagem</button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"lin\" id=\"ContainerT\" />\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n\r\n            <div className=\"ContainerTwo\">\r\n                <div className=\"container-cropper\" >\r\n                    {image ? (\r\n                        <>\r\n                            <div className='cropper'>\r\n                                <Cropper\r\n                                    image={image}\r\n                                    crop={crop}\r\n                                    zoom={zoom}\r\n                                    aspect={1}\r\n                                    onCropChange={setCrop}\r\n                                    onZoomChange={setZoom}\r\n                                    onCropComplete={onCropComplete}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='slider'>\r\n                                <Slider\r\n                                    min={1}\r\n                                    max={6}\r\n                                    step={0.1}\r\n                                    value={zoom}\r\n                                    onChange={(e, zoom) => setZoom(zoom)}\r\n                                    color='secondary'\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Salva e lista a imagem */}\r\n                            <Button\r\n                                className=\"Btn\"\r\n                                onClick={() => setImage(false)}\r\n                            >salvar imagem cortada </Button>\r\n                        </>\r\n                    ) : null}\r\n\r\n                </div>\r\n\r\n                <div className=\"blocos\">\r\n                    {bloco1 ? (\r\n                        <>\r\n                            <div className=\"bloco1\">\r\n                                <div className=\"imagem\">\r\n                                    <img src={state.selectedFile} />\r\n                                    {/* <div className=\"verification\"/> */}\r\n                                </div>\r\n                                <div className=\"container-buttons\">\r\n                                    <Button >Excluir</Button>\r\n\r\n                                    {/* Abre o crop de imagem */}\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        ref={inputCortar}\r\n                                        accept='image/*'\r\n                                        style={{ display: 'none' }}\r\n                                        onChange={AbrirCrop}\r\n                                        onClick={Qtd}\r\n                                    />\r\n                                    <Button\r\n                                        onClick={refCortar}\r\n                                    >Cortar</Button>\r\n\r\n                                    {/* Abre o input para a frase da foto */}\r\n                                    <Button\r\n                                        onClick={() => setModalShow(true)}>\r\n                                        Frase\r\n                                    </Button>\r\n                                    <ModalFrase\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-buttons botaosalvar\">\r\n                                \r\n                            {<p>Você ainda pode escolher {contador} imagens</p>}\r\n                                <Button className=\"btn\" type=\"submit\" onClick={uparImg}>Salvar e enviar</Button>\r\n                            </div>\r\n\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"contact\" />\r\n            <div id=\"doubt\" />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["61"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",["62","63"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\cropimage.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\MaEvents\\main.js",["64"],{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":4,"column":27,"nodeType":"67","messageId":"68","endLine":4,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":122,"column":41,"nodeType":"72","messageId":"73","endLine":122,"endColumn":43},{"ruleId":"65","severity":1,"message":"74","line":16,"column":17,"nodeType":"67","messageId":"68","endLine":16,"endColumn":23},{"ruleId":"75","severity":1,"message":"76","line":196,"column":37,"nodeType":"77","endLine":196,"endColumn":69},{"ruleId":"65","severity":1,"message":"78","line":82,"column":13,"nodeType":"67","messageId":"68","endLine":82,"endColumn":20},{"ruleId":"65","severity":1,"message":"79","line":10,"column":12,"nodeType":"67","messageId":"68","endLine":10,"endColumn":19},{"ruleId":"65","severity":1,"message":"80","line":10,"column":21,"nodeType":"67","messageId":"68","endLine":10,"endColumn":31},{"ruleId":null,"fatal":true,"severity":2,"message":"81","line":3,"column":5},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setDes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'usuario' is assigned a value but never used.","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","Parsing error: Identifier 'botaoComprar' has already been declared\n\n  1 | import botaoComprar from '../../pages/Home';\n  2 | \n> 3 | let botaoComprar = localStorage.getItem('buyButton');\n    |     ^\n  4 | \n  5 | \n  6 | // Array dos botões, adiciona valores aos mesmos"]