[{"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js":"1","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"2","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"3","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"4","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx":"5","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx":"6","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"7","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"8","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\cropimage.js":"9","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js":"10","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx":"11","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js":"12"},{"size":952,"mtime":1609354258808,"results":"13","hashOfConfig":"14"},{"size":6970,"mtime":1609360430126,"results":"15","hashOfConfig":"14"},{"size":3271,"mtime":1609191266791,"results":"16","hashOfConfig":"14"},{"size":11404,"mtime":1609357440936,"results":"17","hashOfConfig":"14"},{"size":3720,"mtime":1609191266792,"results":"18","hashOfConfig":"14"},{"size":47,"mtime":1609191266802,"results":"19","hashOfConfig":"14"},{"size":6928,"mtime":1609191266798,"results":"20","hashOfConfig":"14"},{"size":2575,"mtime":1609392164797,"results":"21","hashOfConfig":"14"},{"size":2669,"mtime":1608177721076,"results":"22","hashOfConfig":"14"},{"size":375,"mtime":1609191266801,"results":"23","hashOfConfig":"14"},{"size":898,"mtime":1609357811359,"results":"24","hashOfConfig":"14"},{"size":753,"mtime":1609389304128,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"klvgq9",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",["55","56"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./index.css\";\r\nimport logoIN from '../../assets/img/001-instagram.svg'\r\nimport logoFB from '../../assets/img/002-facebook.svg'\r\nimport logoPT from '../../assets/img/003-pinterest.svg'\r\n\r\n\r\nexport default function Footer() {\r\n    \r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n\r\n  const enviarEmail = () => {\r\n    return nome;\r\n  };\r\n\r\n  return (\r\n    <footer id=\"rodape\">\r\n      <div className=\"container\">\r\n        <div className=\"flex\">\r\n          <div className=\"textFooter\">\r\n            <p>Pix4Fun</p>\r\n            <p>IMPRESSÃO DE FOTOS NO FORMATO POLAROID</p>\r\n            <a href=\"mailto:CONTATO@PIX4FUN.COM.BR\">CONTATO@PIX4FUN.COM.BR</a>\r\n          </div>\r\n\r\n          <form method=\"post\" className=\"contato\">\r\n            <p>Entre em contato conosco</p>\r\n            <div className=\"field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={nome}\r\n                onChange={(event) => setNome(event.target.value)}\r\n                placeholder=\"Nome\"\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <textarea\r\n                rows=\"3\"\r\n                cols=\"35\"\r\n                name=\"nome\"\r\n                value={mensagem}\r\n                onChange={(event) => setMensagem(event.target.value)}\r\n                placeholder=\"Mensagem\"\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btnEnviar\">Enviar</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"pFooter\">\r\n          <p>©PIX4FUN Todos os direitos reservados. CNPJ 18.882.937/0001-01</p>\r\n          <p>SIGA-NOS EM NOSSAS REDES SOCIAIS PARA FICAR POR DENTRO DE TODAS AS\r\n            NOVIDADES!</p>\r\n        </div>\r\n\r\n        <div className=\"links\">\r\n            <a href=\"https://instagram.com/pix4funphoto\"><img src={logoIN} alt=\"Logo com link para o Instagram do pix4fun\"/></a>\r\n            <a href=\"https://www.facebook.com/pix4funphoto\"><img src={logoFB} alt=\"Logo com link para o Facebook do pix4fun\"/></a>\r\n            <a href=\"https://www.pinterest.com/\"><img src={logoPT} alt=\"Logo com link para o Pinterest do pix4fun\"/></a>\r\n        </div>\r\n\r\n        {\r\n          // Formulário com boostrap\r\n        }\r\n\r\n        {/* <Form onSubmit={event => enviarEmail(event)}>\r\n          <Form.Group controlId=\"formBasicContato\">\r\n          <Form.Control type=\"text\" placeholder=\"Nome\" value={nome} onChange={event => setNome(event.target.value)} />\r\n          <Form.Control type=\"text\" placeholder=\"Email\" value={email} onChange={event => setEmail(event.target.value)} />\r\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Mensagem\" value={mensagem} onChange={event => setMensagem(event.target.value)} />\r\n          </Form.Group>\r\n        </Form> */}\r\n      </div>\r\n    </footer>\r\n  );\r\n}",["57","58"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["59","60","61","62","63","64","65","66","67"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport './index.css';\r\n\r\nconst UploadImagem = () => {\r\n\r\n    // Variaveis dos blocos\r\n    const [bloco1, setBloco1] = useState(null)\r\n    const [bloco2, setBloco2] = useState(null)\r\n\r\n    const [container, setContainer] = React.useState(null)\r\n    // Variaveis do crop\r\n    const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = React.useState(1)\r\n    const [image, setImage] = React.useState(null)\r\n    const [croppedarea, setCroppedarea] = React.useState(null)\r\n\r\n    // Variaveis referentes aos botões\r\n    const [frase, setFrase] = useState('')\r\n    const [contador, setContador] = useState(0);\r\n    const [desContador, setDescontador] = useState(18);\r\n    const [modalShow, setModalShow] = React.useState(false)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão escolher outra imagem\r\n    const inputEscollherOutra = React.useRef();\r\n    const refEscolherOutra = () => inputEscollherOutra.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const refCortar = () => inputCortar.current.click();\r\n\r\n    //Componente que define a area do crop\r\n    const onCropComplete = (cropPorcentagem, cropPixels) => {\r\n        console.log(cropPorcentagem, cropPixels);\r\n        setCroppedarea(cropPixels)\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = async e => {\r\n        const fd = new FormData();\r\n        fd.append('image', croppedarea)\r\n        fetch('http://localhost:5000/api/Upload', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // Componente que escolhe arquivo, e o corta \r\n    const AbrirCrop = (event) => {\r\n        const reader = new FileReader();\r\n\r\n        if (event.target.files[0]) {\r\n            reader.readAsDataURL(event.target.files[0])\r\n            reader.addEventListener(\"load\", () => {\r\n                setImage(reader.result)\r\n                AddContador()\r\n            })\r\n            console.log(event)\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // Fecha o crop\r\n    const CloseCrop = () => {\r\n        setImage({\r\n            fecharcrop: null\r\n        })\r\n\r\n    };\r\n\r\n    //Mostra a quantidade de imagens selecionadas\r\n    function AddContador() {\r\n        setContador(contador + 1)\r\n        setDescontador(desContador - 1)\r\n    }\r\n\r\n    // Define frase que acompanhará foto\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\">Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerA_Text\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerB_escolher\">\r\n                    <input\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={AbrirCrop}\r\n                        onClick={() => setContainer(true)}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <button\r\n                        className=\"Btn\"\r\n                        onClick={refbtnEscolher}\r\n                    >Escolher imagem</button>\r\n                </div>\r\n            </div>\r\n            {container ? (\r\n                <>\r\n            <hr className=\"lin\"/>\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n            \r\n                    <div className=\"ContainerTwo\">\r\n                        <div className=\"container-cropper\">\r\n                            {image ? (\r\n                                <>\r\n                                    <div className='cropper'>\r\n                                        <Cropper\r\n                                            image={image}\r\n                                            crop={crop}\r\n                                            zoom={zoom}\r\n                                            aspect={1}\r\n                                            onCropChange={setCrop}\r\n                                            onZoomChange={setZoom}\r\n                                            onCropComplete={onCropComplete}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='slider'>\r\n                                        <Slider\r\n                                            min={1}\r\n                                            max={6}\r\n                                            step={0.1}\r\n                                            value={zoom}\r\n                                            onChange={(e, zoom) => setZoom(zoom)}\r\n                                            color='secondary'\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Salva e lista a imagem */}\r\n                                    <button\r\n                                        variant=\"contained\"\r\n                                        className=\"Btn\"\r\n                                        onClick={() => setImage(false)}\r\n                                    >salvar imagem cortada </button>\r\n                                </>\r\n                            ) : null}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"blocos\">\r\n                            {bloco1 ? (\r\n                                <>\r\n                                    <div className=\"bloco1\">\r\n                                        <div className=\"imagem\">\r\n                                            <img src={croppedarea} />\r\n                                        </div>\r\n                                        <div className=\"container-buttons\">\r\n                                            <Button variant=\"contained\">Excluir</Button>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                ref={inputCortar}\r\n                                                accept='image/*'\r\n                                                style={{ display: 'none' }}\r\n                                                onChange={AbrirCrop}\r\n                                                onClick={AddContador}\r\n                                            />\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                onClick={refCortar}\r\n                                            >Cortar</Button>\r\n                                            <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                                                Frase\r\n                                    </Button>\r\n                                            <ModalFrase\r\n                                                show={modalShow}\r\n                                                onHide={() => setModalShow(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            ) : null}\r\n\r\n                            {bloco2 ? (\r\n                                <>\r\n                                    <div className=\"bloco2\">\r\n                                        <div className=\"imagem\">\r\n                                            <img src={croppedarea} />\r\n                                        </div>\r\n                                        <div className=\"container-buttons\">\r\n                                            <Button variant=\"contained\">Excluir</Button>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                ref={inputCortar}\r\n                                                accept='image/*'\r\n                                                style={{ display: 'none' }}\r\n                                                onChange={AbrirCrop}\r\n                                                onClick={AddContador}\r\n                                            />\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                onClick={refCortar}\r\n                                            >Cortar</Button>\r\n                                            <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                                                Frase\r\n                            </Button>\r\n                                            <ModalFrase\r\n                                                show={modalShow}\r\n                                                onHide={() => setModalShow(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : null}\r\n            <Footer id=\"rodape\" />\r\n        </div>\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx",[],["68","69"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["70"],"import \"./index.css\";\r\nimport React, { useState } from \"react\";\r\nimport { url } from \"../../utils/constants\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport Header from \"../../components/Header/index\";\r\n\r\nexport default function LoginCadastro() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailCadastro, setEmailCadastro] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [senhaCadastro, setSenhaCadastro] = useState(\"\");\r\n  const [telefone, setTelefone] = useState(\"\");\r\n  const [cep, setCep] = useState(\"\");\r\n  const [rua, setRua] = useState(\"\");\r\n  const [numero, setNumero] = useState(\"\");\r\n  const [complemento, setComplemento] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  // Faz o cadastro do usuário\r\n  const cadastrar = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Faz a conexão com o banco de dados\r\n    fetch(url + \"usuario\", {\r\n      // Define o método que será utilizado\r\n      method: \"POST\",\r\n      // Define as informações que são necessárias para o login\r\n      body: JSON.stringify({\r\n        nome: nome,\r\n        email: emailCadastro,\r\n        senha: senhaCadastro,\r\n        telefone: telefone,\r\n        cep: cep,\r\n        rua: rua,\r\n        numero: numero,\r\n        complemento: complemento,\r\n        idPerfilAcesso: 1,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }).then((response) => {\r\n      // Verifica a resposta, e se for OK mostra um alert informando que o usuário foi cadastrado\r\n      if (response.ok) {\r\n        console.log(response.json());\r\n\r\n        alert(\"Usuario cadastrado.\");\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const logar = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(url + \"login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: email,\r\n        senha: senha,\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // Verifica se a validação for OK e caso seja, informa a resposta\r\n        if (response.ok) return response.json();\r\n\r\n        // Caso validação não seja OK informa um alert\r\n        alert(\"Dado inválido\");\r\n      })\r\n      .then((data) => {\r\n        // Armazena o token\r\n        localStorage.setItem(\"token\", data.token);\r\n\r\n        let usuario = jwt_decode(data.token);\r\n\r\n        history.push(\"/\");\r\n\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n\r\n      <div className=\"loginCadastro\">\r\n        <section id=\"login\">\r\n          <Form onSubmit={(event) => logar(event)}>\r\n            <p>Faça o login</p>\r\n            <div className=\"field\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\"Insira seu e-mail\"\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"senha\"\r\n                value={senha}\r\n                placeholder=\"Insira sua senha\"\r\n                onChange={(event) => setSenha(event.target.value)}\r\n              />\r\n            </div>\r\n            <Button type=\"submit\" className=\"btnEnviar\">Logar</Button>\r\n          </Form>\r\n        </section>\r\n\r\n        <hr />\r\n\r\n        <section id=\"cadastro\">\r\n          <Form onSubmit={(event) => cadastrar(event)}>\r\n            <p>Faça o cadastro</p>\r\n            <div className=\"field\">\r\n              <label>Nome</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={nome}\r\n                placeholder=\"Nome e Sobrenome\"\r\n                onChange={(event) => setNome(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Email</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Insira um e-mail válido\"\r\n                value={emailCadastro}\r\n                onChange={(event) => setEmailCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Senha</label>\r\n              <input\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Insira uma senha\"\r\n                name=\"senha\"\r\n                value={senhaCadastro}\r\n                onChange={(event) => setSenhaCadastro(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"telefone\">Telefone</label>\r\n              <input\r\n                required\r\n                type=\"tel\"\r\n                name=\"telefone\"\r\n                placeholder=\"(xx) xxxxx-xxxx\"\r\n                value={telefone}\r\n                onChange={(event) => setTelefone(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>CEP</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"xxxxx-xxx\"\r\n                name=\"cep\"\r\n                value={cep}\r\n                onChange={(event) => setCep(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Rua</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Insira sua rua\"\r\n                name=\"rua\"\r\n                value={rua}\r\n                onChange={(event) => setRua(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Numero</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                name=\"numero\"\r\n                value={numero}\r\n                onChange={(event) => setNumero(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"Field\">\r\n              <label>Complemento</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"complemento\"\r\n                value={complemento}\r\n                placeholder=\"Se não houver, não preencha este campo\"\r\n                onChange={(event) => setComplemento(event.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\" className=\"btnEnviar\">Cadastrar</Button>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n      <Footer id=\"doubt\" />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\cropimage.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js",[],{"ruleId":"71","severity":1,"message":"72","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"75","line":15,"column":9,"nodeType":"73","messageId":"74","endLine":15,"endColumn":20},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"80","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"72","line":7,"column":17,"nodeType":"73","messageId":"74","endLine":7,"endColumn":21},{"ruleId":"71","severity":1,"message":"81","line":13,"column":20,"nodeType":"73","messageId":"74","endLine":13,"endColumn":29},{"ruleId":"71","severity":1,"message":"82","line":14,"column":20,"nodeType":"73","messageId":"74","endLine":14,"endColumn":29},{"ruleId":"71","severity":1,"message":"83","line":35,"column":11,"nodeType":"73","messageId":"74","endLine":35,"endColumn":27},{"ruleId":"71","severity":1,"message":"84","line":48,"column":11,"nodeType":"73","messageId":"74","endLine":48,"endColumn":18},{"ruleId":"71","severity":1,"message":"85","line":74,"column":11,"nodeType":"73","messageId":"74","endLine":74,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":195,"column":45,"nodeType":"88","endLine":195,"endColumn":70},{"ruleId":"86","severity":1,"message":"87","line":227,"column":45,"nodeType":"88","endLine":227,"endColumn":70},{"ruleId":"76","replacedBy":"89"},{"ruleId":"78","replacedBy":"90"},{"ruleId":"71","severity":1,"message":"91","line":82,"column":13,"nodeType":"73","messageId":"74","endLine":82,"endColumn":20},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'enviarEmail' is assigned a value but never used.","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'useEffect' is defined but never used.","'setBloco1' is assigned a value but never used.","'setBloco2' is assigned a value but never used.","'refEscolherOutra' is assigned a value but never used.","'uparImg' is assigned a value but never used.","'CloseCrop' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["92"],["93"],"'usuario' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]