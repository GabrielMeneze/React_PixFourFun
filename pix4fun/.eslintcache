[{"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js":"1","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx":"2","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx":"3","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx":"4","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx":"5","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx":"6","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx":"7","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx":"8","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\cropimage.js":"9","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js":"10","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx":"11","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js":"12","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\MaEvents\\main.js":"13"},{"size":952,"mtime":1610657200370,"results":"14","hashOfConfig":"15"},{"size":10526,"mtime":1611030979303,"results":"16","hashOfConfig":"15"},{"size":3253,"mtime":1610146852064,"results":"17","hashOfConfig":"15"},{"size":9524,"mtime":1610995205553,"results":"18","hashOfConfig":"15"},{"size":3853,"mtime":1609887779942,"results":"19","hashOfConfig":"15"},{"size":47,"mtime":1609897564452,"results":"20","hashOfConfig":"15"},{"size":6971,"mtime":1610657200376,"results":"21","hashOfConfig":"15"},{"size":2878,"mtime":1610657200378,"results":"22","hashOfConfig":"15"},{"size":2669,"mtime":1608177721076,"results":"23","hashOfConfig":"15"},{"size":375,"mtime":1610657200381,"results":"24","hashOfConfig":"15"},{"size":1334,"mtime":1611011782624,"results":"25","hashOfConfig":"15"},{"size":697,"mtime":1610657200368,"results":"26","hashOfConfig":"15"},{"size":2974,"mtime":1610147837578,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"klvgq9",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\index.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Home\\index.jsx",["56","57"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Footer\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\UploadImagem\\index.jsx",["58","59"],"// Fechar o crop como você fecha o input da frase\r\n\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/Header/index';\r\nimport Footer from '../../components/Footer/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Modal } from 'react-bootstrap';\r\nimport './index.css';\r\n\r\nconst UploadImagem = () => {\r\n\r\n    const [state, setState] = useState('')\r\n    const [contador, setContador] = useState(6)\r\n    const [des, setDes] = useState(-1)\r\n    const [crop, setCrop] = React.useState({ x: 0, y: 0 })\r\n    const [zoom, setZoom] = React.useState(1)\r\n    const [image, setImage] = React.useState(null)\r\n    const [bloco1, setBloco1] = React.useState(null)\r\n    const [croppedarea, setCroppedarea] = React.useState(null)\r\n\r\n\r\n    // Variaveis referentes aos botões\r\n    const [frase, setFrase] = useState('')\r\n    const [modalShow, setModalShow] = React.useState(false)\r\n\r\n    //Referencia o input no Botão escolher imagem\r\n    const inputEscolher = React.useRef();\r\n    const refbtnEscolher = () => inputEscolher.current.click();\r\n\r\n    //Referencia o input no Botão Cortar\r\n    const inputCortar = React.useRef();\r\n    const refCortar = () => inputCortar.current.click();\r\n\r\n    //Componente que define a area do crop\r\n    const onCropComplete = (cropPorcentagem, cropPixels) => {\r\n        setCroppedarea(cropPixels)\r\n        console.log(cropPorcentagem, croppedarea)\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparFrase = () => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:3000/api/Foto/FraseFoto', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n    // componente que escolhe a imagem\r\n    const escolherImg = event => {\r\n        setState({\r\n            selectedFile: URL.createObjectURL(event.target.files[0])\r\n        })\r\n    }\r\n\r\n    // Upa imagem para a api\r\n    const uparImg = (event) => {\r\n        const fd = new FormData();\r\n        fd.append('FraseFoto', frase)\r\n        fetch('http://localhost:3000/api/Upload', fd)\r\n            .then(res => {\r\n                console.log(res)\r\n            });\r\n    }\r\n\r\n\r\n    // Componente que escolhe a imagem e o corta \r\n    const AbrirCrop = (event, props) => {\r\n        const reader = new FileReader();\r\n\r\n        if (event.target.files[0]) {\r\n            reader.readAsDataURL(event.target.files[0])\r\n            reader.addEventListener(\"load\", () => {\r\n                setImage(reader.result)\r\n            })\r\n        }\r\n    };\r\n\r\n    const Qtd = () =>{\r\n        if (contador === 0) {\r\n            <p>Você não pode mais selecionar imagens</p>\r\n        }else{\r\n            setContador(contador + des);\r\n        }\r\n    }\r\n\r\n    // Define frase que acompanhará foto\r\n    function ModalFrase(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ fontFamily: \"Questrial\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Frase da foto\r\n              </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Digite sua frase abaixo\r\n                    </p>\r\n                    <input style={{ padding: \"0 5px\" }} value={frase} onChange={event => setFrase(event.target.frase)} type=\"text\" placeholder=\"Frase\" />\r\n                    <Button style={{ textTransform: \"none\", marginLeft: 5 }} type=\"submit\" onClick={uparFrase}>Enviar</Button>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.onHide}>Fechar</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ContainerMain\">\r\n            <Header />\r\n            <div className=\"ContainerOne\">\r\n                <div className=\"ContainerA_Text\">\r\n                    <h2 className=\"textOne\">\r\n                        Agora é a hora de<br></br> nos enviar suas<br></br> fotos!\r\n          <span className=\"textGray\">Simples e <br></br>rápido.</span>\r\n                        <p>Selecione suas fotos favoritas, recorte<br></br>\r\n                            no formato em que deseja e clique e<br></br> enviar. Pronto!\r\n                            Receberemos um aviso e<br></br> suas fotos começarão a ser impressas.\r\n                        </p>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"ContainerB_escolher\">\r\n                    <input\r\n                        href=\"#ContainerT\"\r\n                        type=\"file\"\r\n                        ref={inputEscolher}\r\n                        accept='image/*'\r\n                        onChange={escolherImg}\r\n                        onClick={() => setBloco1(true)}\r\n                        style={{ display: 'none' }}\r\n                    />\r\n                    <button\r\n                        className=\"Btn\"\r\n                        onClick={refbtnEscolher}\r\n                    >Escolher imagem</button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr className=\"lin\" id=\"ContainerT\" />\r\n            {/* ----------------------------------------------Fim do 1°Container------------------------------------------------------ */}\r\n\r\n            <div className=\"ContainerTwo\">\r\n                <div className=\"container-cropper\" >\r\n                    {image ? (\r\n                        <>\r\n                            <div className='cropper'>\r\n                                <Cropper\r\n                                    image={image}\r\n                                    crop={crop}\r\n                                    zoom={zoom}\r\n                                    aspect={1}\r\n                                    onCropChange={setCrop}\r\n                                    onZoomChange={setZoom}\r\n                                    onCropComplete={onCropComplete}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='slider'>\r\n                                <Slider\r\n                                    min={1}\r\n                                    max={6}\r\n                                    step={0.1}\r\n                                    value={zoom}\r\n                                    onChange={(e, zoom) => setZoom(zoom)}\r\n                                    color='secondary'\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Salva e lista a imagem */}\r\n                            <Button\r\n                                className=\"Btn\"\r\n                                onClick={() => setImage(false)}\r\n                            >salvar imagem cortada </Button>\r\n                        </>\r\n                    ) : null}\r\n\r\n                </div>\r\n\r\n                <div className=\"blocos\">\r\n                    {bloco1 ? (\r\n                        <>\r\n                            <div className=\"bloco1\">\r\n                                <div className=\"imagem\">\r\n                                    <img src={state.selectedFile} />\r\n                                    {/* <div className=\"verification\"/> */}\r\n                                </div>\r\n                                <div className=\"container-buttons\">\r\n                                    <Button >Excluir</Button>\r\n\r\n                                    {/* Abre o crop de imagem */}\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        ref={inputCortar}\r\n                                        accept='image/*'\r\n                                        style={{ display: 'none' }}\r\n                                        onChange={AbrirCrop}\r\n                                        onClick={Qtd}\r\n                                    />\r\n                                    <Button\r\n                                        onClick={refCortar}\r\n                                    >Cortar</Button>\r\n\r\n                                    {/* Abre o input para a frase da foto */}\r\n                                    <Button\r\n                                        onClick={() => setModalShow(true)}>\r\n                                        Frase\r\n                                    </Button>\r\n                                    <ModalFrase\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"container-buttons botaosalvar\">\r\n                                \r\n                            {<p>Você ainda pode escolher {contador} imagens</p>}\r\n                                <Button className=\"btn\" type=\"submit\" onClick={uparImg}>Salvar e enviar</Button>\r\n                            </div>\r\n\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"contact\" />\r\n            <div id=\"doubt\" />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\nexport default UploadImagem;\r\n\r\n\r\n","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\Header\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\constants.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\LoginCadastro\\index.jsx",["60"],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Pagamento\\index.jsx",["61","62"],"import React, { useState } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport TrackingEvents from '../../components/TrackingEvents';\r\nimport './index.css';\r\n\r\nexport default function Pagamento() {\r\n\r\n    const [events, setEvents] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n\r\n    // async function doTheJob() {\r\n    //     const ValidarResponse = await Validar('PIX10');\r\n    //     console.log(ValidarResponse);\r\n    // }\r\n\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData(event.target);\r\n        const data = Object.fromEntries(formData);\r\n\r\n        fetch('http://localhost:3001/?tracking=' + data.tracking)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const events = data.events;\r\n                setEvents(events);\r\n            })\r\n            .catch(console.error);\r\n    };\r\n\r\n    function calcularHandler(event) {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const data = Object.fromEntries(formData);\r\n        fetch('http://localhost:3002/?calcular=' + data.calcular)\r\n            .then(response => response.json())\r\n            .then(console.log)\r\n            .catch(console.error)\r\n        console.log('*** App.subimitHandler.data', data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"bloco\">\r\n            <Header />\r\n            <div className=\"localdeentrega\">\r\n                <h1>Rastreamento de pacote:</h1>\r\n\r\n                <form onSubmit={submitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            name=\"tracking\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            value=\"Track\"\r\n                        >  Track\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n                <TrackingEvents events={events} />\r\n\r\n\r\n                <form onSubmit={calcularHandler}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"calcular\"\r\n                            className=\"form-control\"\r\n                        >\r\n                        </input>\r\n                        <button\r\n                            type=\"submit\"\r\n                            value=\"Calcular\"\r\n                        >Calcular</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            <div id=\"contact\" />\r\n            <div id=\"doubt\" />\r\n            <Footer />\r\n        </div>\r\n    )\r\n\r\n\r\n}","C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\utils\\cropimage.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\reportWebVitals.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\pages\\Carrinho\\index.jsx",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\TrackingEvents\\index.js",[],"C:\\Users\\000\\Documents\\GitHub\\React_PixFourFun\\pix4fun\\src\\components\\MaEvents\\main.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":4,"column":27,"nodeType":"66","messageId":"67","endLine":4,"endColumn":33},{"ruleId":"64","severity":1,"message":"69","line":16,"column":17,"nodeType":"66","messageId":"67","endLine":16,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":196,"column":37,"nodeType":"72","endLine":196,"endColumn":69},{"ruleId":"64","severity":1,"message":"73","line":82,"column":13,"nodeType":"66","messageId":"67","endLine":82,"endColumn":20},{"ruleId":"64","severity":1,"message":"74","line":10,"column":12,"nodeType":"66","messageId":"67","endLine":10,"endColumn":19},{"ruleId":"64","severity":1,"message":"75","line":10,"column":21,"nodeType":"66","messageId":"67","endLine":10,"endColumn":31},{"ruleId":null,"fatal":true,"severity":2,"message":"76","line":3,"column":5},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'setDes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'usuario' is assigned a value but never used.","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","Parsing error: Identifier 'botaoComprar' has already been declared\n\n  1 | import botaoComprar from '../../pages/Home';\n  2 | \n> 3 | let botaoComprar = localStorage.getItem('buyButton');\n    |     ^\n  4 | \n  5 | \n  6 | // Array dos botões, adiciona valores aos mesmos"]